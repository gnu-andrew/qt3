/*!
    \class QObjectList qobjectlist.h
    \brief The QObjectList class is a QPtrList of QObjects.

    \ingroup collection
    \ingroup tools

    A QObjectList is a \link qptrlist.html
    QPtrList\<QObject\>\endlink. The list can be traversed using
    inherited functions, e.g. getFirst(), next(), etc., or using a
    QObjectListIterator iterator.

    See \l QObject::queryList() for an example of use.

    \sa QObjectListIterator QObject 
*/

/*!
    \fn QObjectList::QObjectList()

    Constructs an empty QObject list.
*/

/*!
    \fn QObjectList::QObjectList( const QObjectList &list )

    Constructs a copy of \a list.

    Each item in \a list is \link append() appended\endlink to this
    list. Only the pointers are copied (shallow copy).
*/

/*!
    \fn QObjectList::~QObjectList()

    Removes all the object pointers from the list and destroys the
    list.

    All list iterators that access this list will be reset.

    \sa setAutoDelete()
*/

/*!
    \fn QObjectList &QObjectList::operator=(const QObjectList &list)

    Assigns \a list to this list and returns a reference to this list.

    This list is first cleared and then each item in \a list is \link
    append() appended\endlink to this list. Only the pointers are
    copied (shallow copy) unless newItem() has been reimplemented().
*/


/*!
    \class QObjectListIterator qobjectlist.h
    \brief The QObjectListIterator class provides an iterator for
    QObjectLists.

    \ingroup collection
    \ingroup tools

    A QObjectListIterator iterator is a \link qptrlistiterator.html
    QPtrListIterator\<QObject\>\endlink.

    See \l QObject::queryList() for an example of use.

    \sa QObjectList
*/

/*!
    \fn QObjectListIterator::QObjectListIterator( const QObjectList &list )

    Constructs an iterator for \a list. The current iterator item is
    set to point on the first item in the \a list.
*/

/*!
    \fn QObjectListIterator& QObjectListIterator::operator=( const QObjectListIterator &it )

    Assignment. Makes a copy of the iterator \a it and returns a
    reference to this iterator.
*/





