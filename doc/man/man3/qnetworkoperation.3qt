'\" t
.TH QNetworkOperation 3qt "2 February 2007" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2007 Trolltech ASA.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QNetworkOperation \- Common operations for network protocols
.SH SYNOPSIS
\fC#include <qnetworkprotocol.h>\fR
.PP
Inherits QObject.
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "\fBQNetworkOperation\fR ( QNetworkProtocol::Operation operation, const QString & arg0, const QString & arg1, const QString & arg2 )"
.br
.ti -1c
.BI "\fBQNetworkOperation\fR ( QNetworkProtocol::Operation operation, const QByteArray & arg0, const QByteArray & arg1, const QByteArray & arg2 )"
.br
.ti -1c
.BI "\fB~QNetworkOperation\fR ()"
.br
.ti -1c
.BI "void \fBsetState\fR ( QNetworkProtocol::State state )"
.br
.ti -1c
.BI "void \fBsetProtocolDetail\fR ( const QString & detail )"
.br
.ti -1c
.BI "void \fBsetErrorCode\fR ( int ec )"
.br
.ti -1c
.BI "void \fBsetArg\fR ( int num, const QString & arg )"
.br
.ti -1c
.BI "void \fBsetRawArg\fR ( int num, const QByteArray & arg )"
.br
.ti -1c
.BI "QNetworkProtocol::Operation \fBoperation\fR () const"
.br
.ti -1c
.BI "QNetworkProtocol::State \fBstate\fR () const"
.br
.ti -1c
.BI "QString \fBarg\fR ( int num ) const"
.br
.ti -1c
.BI "QByteArray \fBrawArg\fR ( int num ) const"
.br
.ti -1c
.BI "QString \fBprotocolDetail\fR () const"
.br
.ti -1c
.BI "int \fBerrorCode\fR () const"
.br
.ti -1c
.BI "void \fBfree\fR ()"
.br
.in -1c
.SH DESCRIPTION
The QNetworkOperation class provides common operations for network protocols.
.PP
An object is created to describe the operation and the current state for each operation that a network protocol should process.
.PP
For a detailed description of the Qt Network Architecture and how to implement and use network protocols in Qt, see the Qt Network Documentation.
.PP
See also QNetworkProtocol and Input/Output and Networking.
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QNetworkOperation::QNetworkOperation ( QNetworkProtocol::Operation operation, const QString & arg0, const QString & arg1, const QString & arg2 )"
Constructs a network operation object. \fIoperation\fR is the type of the operation, and \fIarg0\fR, \fIarg1\fR and \fIarg2\fR are the first three arguments of the operation. The state is initialized to QNetworkProtocol::StWaiting.
.PP
See also QNetworkProtocol::Operation and QNetworkProtocol::State.
.SH "QNetworkOperation::QNetworkOperation ( QNetworkProtocol::Operation operation, const QByteArray & arg0, const QByteArray & arg1, const QByteArray & arg2 )"
Constructs a network operation object. \fIoperation\fR is the type of the operation, and \fIarg0\fR, \fIarg1\fR and \fIarg2\fR are the first three raw data arguments of the operation. The state is initialized to QNetworkProtocol::StWaiting.
.PP
See also QNetworkProtocol::Operation and QNetworkProtocol::State.
.SH "QNetworkOperation::~QNetworkOperation ()"
Destructor.
.SH "QString QNetworkOperation::arg ( int num ) const"
Returns the operation's \fInum\fR-th argument. If this argument was not already set, an empty string is returned.
.PP
Example: network/networkprotocol/nntp.cpp.
.SH "int QNetworkOperation::errorCode () const"
Returns the error code for the last error that occurred.
.SH "void QNetworkOperation::free ()"
Sets this object to delete itself when it hasn't been used for one second.
.PP
Because QNetworkOperation pointers are passed around a lot the QNetworkProtocol generally does not have enough knowledge to delete these at the correct time. If a QNetworkProtocol doesn't need an operation any more it will call this function instead.
.PP
Note: you should never need to call the method yourself.
.SH "QNetworkProtocol::Operation QNetworkOperation::operation () const"
Returns the type of the operation.
.SH "QString QNetworkOperation::protocolDetail () const"
Returns a detailed error message for the last error. This must have been set using setProtocolDetail().
.SH "QByteArray QNetworkOperation::rawArg ( int num ) const"
Returns the operation's \fInum\fR-th raw data argument. If this argument was not already set, an empty bytearray is returned.
.SH "void QNetworkOperation::setArg ( int num, const QString & arg )"
Sets the network operation's \fInum\fR-th argument to \fIarg\fR.
.SH "void QNetworkOperation::setErrorCode ( int ec )"
Sets the error code to \fIec\fR.
.PP
If the operation failed, the protocol should set an error code to describe the error in more detail. If possible, one of the error codes defined in QNetworkProtocol should be used.
.PP
See also setProtocolDetail() and QNetworkProtocol::Error.
.SH "void QNetworkOperation::setProtocolDetail ( const QString & detail )"
If the operation failed, the error message can be specified as \fIdetail\fR.
.SH "void QNetworkOperation::setRawArg ( int num, const QByteArray & arg )"
Sets the network operation's \fInum\fR-th raw data argument to \fIarg\fR.
.SH "void QNetworkOperation::setState ( QNetworkProtocol::State state )"
Sets the \fIstate\fR of the operation object. This should be done by the network protocol during processing; at the end it should be set to QNetworkProtocol::StDone or QNetworkProtocol::StFailed, depending on success or failure.
.PP
See also QNetworkProtocol::State.
.SH "QNetworkProtocol::State QNetworkOperation::state () const"
Returns the state of the operation. You can determine whether an
operation is still waiting to be processed, is being processed,
has been processed successfully, or failed.

.SH "SEE ALSO"
.BR http://doc.trolltech.com/qnetworkoperation.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2007 Trolltech ASA, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports help us to help you. Thank you.
.P
The definitive Qt documentation is provided in HTML format; it is
located at $QTDIR/doc/html and can be read using Qt Assistant or with
a web browser. This man page is provided as a convenience for those
users who prefer man pages, although this format is not officially
supported by Trolltech. 
.P
If you find errors in this manual page, please report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qnetworkoperation.3qt) and the Qt
version (3.3.8).
