'\" t
.TH QValueListConstIterator 3qt "2 February 2007" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2007 Trolltech ASA.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QValueListConstIterator \- Const iterator for QValueList
.SH SYNOPSIS
All the functions in this class are reentrant when Qt is built with thread support.</p>
.PP
\fC#include <qvaluelist.h>\fR
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "typedef T \fBvalue_type\fR"
.br
.ti -1c
.BI "typedef const T * \fBpointer\fR"
.br
.ti -1c
.BI "typedef const T & \fBreference\fR"
.br
.ti -1c
.BI "\fBQValueListConstIterator\fR ()"
.br
.ti -1c
.BI "\fBQValueListConstIterator\fR ( const QValueListConstIterator<T> & it )"
.br
.ti -1c
.BI "\fBQValueListConstIterator\fR ( const QValueListIterator<T> & it )"
.br
.ti -1c
.BI "bool \fBoperator==\fR ( const QValueListConstIterator<T> & it ) const"
.br
.ti -1c
.BI "bool \fBoperator!=\fR ( const QValueListConstIterator<T> & it ) const"
.br
.ti -1c
.BI "const T & \fBoperator*\fR () const"
.br
.ti -1c
.BI "QValueListConstIterator<T> & \fBoperator++\fR ()"
.br
.ti -1c
.BI "QValueListConstIterator<T> \fBoperator++\fR ( int )"
.br
.ti -1c
.BI "QValueListConstIterator<T> & \fBoperator--\fR ()"
.br
.ti -1c
.BI "QValueListConstIterator<T> \fBoperator--\fR ( int )"
.br
.in -1c
.SH DESCRIPTION
The QValueListConstIterator class provides a const iterator for QValueList.
.PP
In contrast to QValueListIterator, this class is used to iterate over a const list. It does not allow modification of the values of the list since that would break const semantics.
.PP
You can create the appropriate const iterator type by using the \fCconst_iterator\fR typedef provided by QValueList.
.PP
For more information on QValueList iterators, see QValueListIterator.
.PP
See also QValueListIterator, QValueList, Qt Template Library Classes, and Non-GUI Classes.
.SS "Member Type Documentation"
.SH "QValueListConstIterator::pointer"
Pointer to value_type.
.SH "QValueListConstIterator::reference"
Reference to value_type.
.SH "QValueListConstIterator::value_type"
The type of value.
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QValueListConstIterator::QValueListConstIterator ()"
Creates un uninitialized iterator.
.SH "QValueListConstIterator::QValueListConstIterator ( const QValueListConstIterator<T> & it )"
This is an overloaded member function, provided for convenience. It behaves essentially like the above function.
.PP
Constructs a copy of the iterator \fIit\fR.
.SH "QValueListConstIterator::QValueListConstIterator ( const QValueListIterator<T> & it )"
Constructs a copy of the iterator \fIit\fR.
.SH "bool QValueListConstIterator::operator!= ( const QValueListConstIterator<T> & it ) const"
Compares this iterator with \fIit\fR and returns TRUE if they point to different items; otherwise returns FALSE.
.SH "const T & QValueListConstIterator::operator* () const"
Asterisk operator. Returns a reference to the current iterator item.
.SH "QValueListConstIterator<T> & QValueListConstIterator::operator++ ()"
Prefix ++ makes the succeeding item current and returns an iterator pointing to the new current item. The iterator cannot check whether it reached the end of the list. Incrementing the iterator returned by end() causes undefined results.
.SH "QValueListConstIterator<T> QValueListConstIterator::operator++ ( int )"
This is an overloaded member function, provided for convenience. It behaves essentially like the above function.
.PP
Postfix ++ makes the succeeding item current and returns an iterator pointing to the new current item. The iterator cannot check whether it reached the end of the list. Incrementing the iterator returned by end() causes undefined results.
.SH "QValueListConstIterator<T> & QValueListConstIterator::operator-- ()"
Prefix -- makes the previous item current and returns an iterator pointing to the new current item. The iterator cannot check whether it reached the beginning of the list. Decrementing the iterator returned by begin() causes undefined results.
.SH "QValueListConstIterator<T> QValueListConstIterator::operator-- ( int )"
This is an overloaded member function, provided for convenience. It behaves essentially like the above function.
.PP
Postfix -- makes the previous item current and returns an iterator pointing to the new current item. The iterator cannot check whether it reached the beginning of the list. Decrementing the iterator returned by begin() causes undefined results.
.SH "bool QValueListConstIterator::operator== ( const QValueListConstIterator<T> & it ) const"
Compares this iterator with \fIit\fR and returns TRUE if they point
to the same item; otherwise returns FALSE.

.SH "SEE ALSO"
.BR http://doc.trolltech.com/qvaluelistconstiterator.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2007 Trolltech ASA, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports help us to help you. Thank you.
.P
The definitive Qt documentation is provided in HTML format; it is
located at $QTDIR/doc/html and can be read using Qt Assistant or with
a web browser. This man page is provided as a convenience for those
users who prefer man pages, although this format is not officially
supported by Trolltech. 
.P
If you find errors in this manual page, please report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qvaluelistconstiterator.3qt) and the Qt
version (3.3.8).
