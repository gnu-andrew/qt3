'\" t
.TH QWheelEvent 3qt "2 February 2007" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2007 Trolltech ASA.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QWheelEvent \- Parameters that describe a wheel event
.SH SYNOPSIS
\fC#include <qevent.h>\fR
.PP
Inherits QEvent.
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "\fBQWheelEvent\fR ( const QPoint & pos, int delta, int state, Orientation orient = Vertical )"
.br
.ti -1c
.BI "\fBQWheelEvent\fR ( const QPoint & pos, const QPoint & globalPos, int delta, int state, Orientation orient = Vertical )"
.br
.ti -1c
.BI "int \fBdelta\fR () const"
.br
.ti -1c
.BI "const QPoint & \fBpos\fR () const"
.br
.ti -1c
.BI "const QPoint & \fBglobalPos\fR () const"
.br
.ti -1c
.BI "int \fBx\fR () const"
.br
.ti -1c
.BI "int \fBy\fR () const"
.br
.ti -1c
.BI "int \fBglobalX\fR () const"
.br
.ti -1c
.BI "int \fBglobalY\fR () const"
.br
.ti -1c
.BI "ButtonState \fBstate\fR () const"
.br
.ti -1c
.BI "Orientation \fBorientation\fR () const"
.br
.ti -1c
.BI "bool \fBisAccepted\fR () const"
.br
.ti -1c
.BI "void \fBaccept\fR ()"
.br
.ti -1c
.BI "void \fBignore\fR ()"
.br
.in -1c
.SH DESCRIPTION
The QWheelEvent class contains parameters that describe a wheel event.
.PP
Wheel events are sent to the widget under the mouse, and if that widget does not handle the event they are sent to the focus widget. The rotation distance is provided by delta(). The functions pos() and globalPos() return the mouse pointer location at the time of the event.
.PP
A wheel event contains a special accept flag that indicates whether the receiver wants the event. You should call QWheelEvent::accept() if you handle the wheel event; otherwise it will be sent to the parent widget.
.PP
The QWidget::setEnable() function can be used to enable or disable mouse and keyboard events for a widget.
.PP
The event handler QWidget::wheelEvent() receives wheel events.
.PP
See also QMouseEvent, QWidget::grabMouse(), and Event Classes.
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QWheelEvent::QWheelEvent ( const QPoint & pos, int delta, int state, Orientation orient = Vertical )"
Constructs a wheel event object.
.PP
The globalPos() is initialized to QCursor::pos(), i.e. \fIpos\fR, which is usually (but not always) right. Use the other constructor if you need to specify the global position explicitly. \fIdelta\fR contains the rotation distance, \fIstate\fR holds the keyboard modifier flags at the time of the event and \fIorient\fR holds the wheel's orientation.
.PP
See also pos(), delta(), and state().
.SH "QWheelEvent::QWheelEvent ( const QPoint & pos, const QPoint & globalPos, int delta, int state, Orientation orient = Vertical )"
Constructs a wheel event object. The position when the event occurred is given in \fIpos\fR and \fIglobalPos\fR. \fIdelta\fR contains the rotation distance, \fIstate\fR holds the keyboard modifier flags at the time of the event and \fIorient\fR holds the wheel's orientation.
.PP
See also pos(), globalPos(), delta(), and state().
.SH "void QWheelEvent::accept ()"
Sets the accept flag of the wheel event object.
.PP
Setting the accept parameter indicates that the receiver of the event wants the wheel event. Unwanted wheel events are sent to the parent widget.
.PP
The accept flag is set by default.
.PP
See also ignore().
.SH "int QWheelEvent::delta () const"
Returns the distance that the wheel is rotated expressed in multiples or divisions of the \fIwheel delta\fR, which is currently defined to be 120. A positive value indicates that the wheel was rotated forwards away from the user; a negative value indicates that the wheel was rotated backwards toward the user.
.PP
The \fIwheel delta\fR constant was defined to be 120 by wheel mouse vendors to allow building finer-resolution wheels in the future, including perhaps a freely rotating wheel with no notches. The expectation is that such a device would send more messages per rotation but with a smaller value in each message.
.SH "const QPoint & QWheelEvent::globalPos () const"
Returns the global position of the mouse pointer \fIat the time of the event\fR. This is important on asynchronous window systems such as X11; whenever you move your widgets around in response to mouse events, globalPos() can differ a lot from the current pointer position QCursor::pos().
.PP
See also globalX() and globalY().
.SH "int QWheelEvent::globalX () const"
Returns the global x-position of the mouse pointer at the time of the event.
.PP
See also globalY() and globalPos().
.SH "int QWheelEvent::globalY () const"
Returns the global y-position of the mouse pointer at the time of the event.
.PP
See also globalX() and globalPos().
.SH "void QWheelEvent::ignore ()"
Clears the accept flag parameter of the wheel event object.
.PP
Clearing the accept parameter indicates that the event receiver does not want the wheel event. Unwanted wheel events are sent to the parent widget. The accept flag is set by default.
.PP
See also accept().
.SH "bool QWheelEvent::isAccepted () const"
Returns TRUE if the receiver of the event handles the wheel event; otherwise returns FALSE.
.SH "Orientation QWheelEvent::orientation () const"
Returns the wheel's orientation.
.SH "const QPoint & QWheelEvent::pos () const"
Returns the position of the mouse pointer, relative to the widget that received the event.
.PP
If you move your widgets around in response to mouse events, use globalPos() instead of this function.
.PP
See also x(), y(), and globalPos().
.SH "ButtonState QWheelEvent::state () const"
Returns the keyboard modifier flags of the event.
.PP
The returned value is ShiftButton, ControlButton, and AltButton OR'ed together.
.SH "int QWheelEvent::x () const"
Returns the x-position of the mouse pointer, relative to the widget that received the event.
.PP
See also y() and pos().
.SH "int QWheelEvent::y () const"
Returns the y-position of the mouse pointer, relative to the widget that received the event.
.PP
See also x() and pos().

.SH "SEE ALSO"
.BR http://doc.trolltech.com/qwheelevent.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2007 Trolltech ASA, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports help us to help you. Thank you.
.P
The definitive Qt documentation is provided in HTML format; it is
located at $QTDIR/doc/html and can be read using Qt Assistant or with
a web browser. This man page is provided as a convenience for those
users who prefer man pages, although this format is not officially
supported by Trolltech. 
.P
If you find errors in this manual page, please report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qwheelevent.3qt) and the Qt
version (3.3.8).
