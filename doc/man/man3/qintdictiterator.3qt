'\" t
.TH QIntDictIterator 3qt "2 February 2007" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2007 Trolltech ASA.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QIntDictIterator \- Iterator for QIntDict collections
.SH SYNOPSIS
\fC#include <qintdict.h>\fR
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "\fBQIntDictIterator\fR ( const QIntDict<type> & dict )"
.br
.ti -1c
.BI "\fB~QIntDictIterator\fR ()"
.br
.ti -1c
.BI "uint \fBcount\fR () const"
.br
.ti -1c
.BI "bool \fBisEmpty\fR () const"
.br
.ti -1c
.BI "type * \fBtoFirst\fR ()"
.br
.ti -1c
.BI "\fBoperator type *\fR () const"
.br
.ti -1c
.BI "type * \fBcurrent\fR () const"
.br
.ti -1c
.BI "long \fBcurrentKey\fR () const"
.br
.ti -1c
.BI "type * \fBoperator()\fR ()"
.br
.ti -1c
.BI "type * \fBoperator++\fR ()"
.br
.ti -1c
.BI "type * \fBoperator+=\fR ( uint jump )"
.br
.in -1c
.SH DESCRIPTION
The QIntDictIterator class provides an iterator for QIntDict collections.
.PP
QIntDictIterator is implemented as a template class. Define a template instance QIntDictIterator<X> to create a dictionary iterator that operates on QIntDict<X> (dictionary of X*).
.PP
Example:
.PP
.nf
.br
    QIntDict<QLineEdit> fields;
.br
    for ( int i = 0; i < 3; i++ )
.br
        fields.insert( i, new QLineEdit( this ) );
.br
.br
    fields[0]->setText( "Homer" );
.br
    fields[1]->setText( "Simpson" );
.br
    fields[2]->setText( "45" );
.br
.br
    QIntDictIterator<QLineEdit> it( fields );
.br
.br
    for ( ; it.current(); ++it )
.br
        cout << it.currentKey() << ": " << it.current()->text() << endl;
.br
.br
    // Output (random order):
.br
    //  0: Homer
.br
    //  1: Simpson
.br
    //  2: 45
.br
.fi
.PP
Note that the traversal order is arbitrary; you are not guaranteed the order shown above.
.PP
Multiple iterators may independently traverse the same dictionary. A QIntDict knows about all the iterators that are operating on the dictionary. When an item is removed from the dictionary, QIntDict updates all iterators that refer the removed item to point to the next item in the traversal order.
.PP
See also QIntDict, Collection Classes, and Non-GUI Classes.
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QIntDictIterator::QIntDictIterator ( const QIntDict<type> & dict )"
Constructs an iterator for \fIdict\fR. The current iterator item is set to point to the 'first' item in the \fIdict\fR. The first item refers to the first item in the dictionary's arbitrary internal ordering.
.SH "QIntDictIterator::~QIntDictIterator ()"
Destroys the iterator.
.SH "uint QIntDictIterator::count () const"
Returns the number of items in the dictionary this iterator operates over.
.PP
See also isEmpty().
.SH "type * QIntDictIterator::current () const"
Returns a pointer to the current iterator item.
.SH "long QIntDictIterator::currentKey () const"
Returns the key for the current iterator item.
.SH "bool QIntDictIterator::isEmpty () const"
Returns TRUE if the dictionary is empty; otherwise eturns FALSE.
.PP
See also count().
.SH "QIntDictIterator::operator type * () const"
Cast operator. Returns a pointer to the current iterator item. Same as current().
.SH "type * QIntDictIterator::operator() ()"
Makes the succeeding item current and returns the original current item.
.PP
If the current iterator item was the last item in the dictionary or if it was 0, 0 is returned.
.SH "type * QIntDictIterator::operator++ ()"
Prefix ++ makes the succeeding item current and returns the new current item.
.PP
If the current iterator item was the last item in the dictionary or if it was 0, 0 is returned.
.SH "type * QIntDictIterator::operator+= ( uint jump )"
Sets the current item to the item \fIjump\fR positions after the current item, and returns a pointer to that item.
.PP
If that item is beyond the last item or if the dictionary is empty, it sets the current item to 0 and returns 0.
.SH "type * QIntDictIterator::toFirst ()"
Sets the current iterator item to point to the first item in the
dictionary and returns a pointer to the item. The first item
refers to the first item in the dictionary's arbitrary internal
ordering. If the dictionary is  empty it sets the current item to
0 and returns 0.

.SH "SEE ALSO"
.BR http://doc.trolltech.com/qintdictiterator.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2007 Trolltech ASA, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports help us to help you. Thank you.
.P
The definitive Qt documentation is provided in HTML format; it is
located at $QTDIR/doc/html and can be read using Qt Assistant or with
a web browser. This man page is provided as a convenience for those
users who prefer man pages, although this format is not officially
supported by Trolltech. 
.P
If you find errors in this manual page, please report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qintdictiterator.3qt) and the Qt
version (3.3.8).
