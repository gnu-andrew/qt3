'\" t
.TH QSyntaxHighlighter 3qt "2 February 2007" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2007 Trolltech ASA.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QSyntaxHighlighter \- Base class for implementing QTextEdit syntax highlighters
.SH SYNOPSIS
\fC#include <qsyntaxhighlighter.h>\fR
.PP
Inherits Qt.
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "\fBQSyntaxHighlighter\fR ( QTextEdit * textEdit )"
.br
.ti -1c
.BI "virtual \fB~QSyntaxHighlighter\fR ()"
.br
.ti -1c
.BI "virtual int \fBhighlightParagraph\fR ( const QString & text, int endStateOfLastPara ) = 0"
.br
.ti -1c
.BI "void \fBsetFormat\fR ( int start, int count, const QFont & font, const QColor & color )"
.br
.ti -1c
.BI "void \fBsetFormat\fR ( int start, int count, const QColor & color )"
.br
.ti -1c
.BI "void \fBsetFormat\fR ( int start, int count, const QFont & font )"
.br
.ti -1c
.BI "QTextEdit * \fBtextEdit\fR () const"
.br
.ti -1c
.BI "void \fBrehighlight\fR ()"
.br
.ti -1c
.BI "int \fBcurrentParagraph\fR () const"
.br
.in -1c
.SH DESCRIPTION
The QSyntaxHighlighter class is a base class for implementing QTextEdit syntax highlighters.
.PP
A syntax highligher automatically highlights parts of the text in a QTextEdit. Syntax highlighters are often used when the user is entering text in a specific format (for example, source code) and help the user to read the text and identify syntax errors.
.PP
To provide your own syntax highlighting for QTextEdit, you must subclass QSyntaxHighlighter and reimplement highlightParagraph().
.PP
When you create an instance of your QSyntaxHighlighter subclass, pass it the QTextEdit that you want the syntax highlighting to be applied to. After this your highlightParagraph() function will be called automatically whenever necessary. Use your highlightParagraph() function to apply formatting (e.g. setting the font and color) to the text that is passed to it.
.PP
See also Basic Widgets and Text Related Classes.
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QSyntaxHighlighter::QSyntaxHighlighter ( QTextEdit * textEdit )"
Constructs the QSyntaxHighlighter and installs it on \fItextEdit\fR.
.PP
It is the caller's responsibility to delete the QSyntaxHighlighter when it is no longer needed.
.SH "QSyntaxHighlighter::~QSyntaxHighlighter ()\fC [virtual]\fR"
Destructor. Uninstalls this syntax highlighter from the textEdit()
.SH "int QSyntaxHighlighter::currentParagraph () const"
Returns the id of the paragraph which is highlighted, or -1 of no paragraph is currently highlighted.
.PP
Usually this function is called from within highlightParagraph().
.SH "int QSyntaxHighlighter::highlightParagraph ( const QString & text, int endStateOfLastPara )\fC [pure virtual]\fR"
This function is called when necessary by the rich text engine, i.e. on paragraphs which have changed.
.PP
In your reimplementation you should parse the paragraph's \fItext\fR and call setFormat() as often as necessary to apply any font and color changes that you require. Your function must return a value which indicates the paragraph's end state: see below.
.PP
Some syntaxes can have constructs that span paragraphs. For example, a C++ syntax highlighter should be able to cope with \fC/\fR\fC*...*\fR\fC/\fR comments that span paragraphs. To deal with these cases it is necessary to know the end state of the previous paragraph (e.g. "in comment").
.PP
If your syntax does not have paragraph spanning constructs, simply ignore the \fIendStateOfLastPara\fR parameter and always return 0.
.PP
Whenever highlightParagraph() is called it is passed a value for \fIendStateOfLastPara\fR. For the very first paragraph this value is always -2. For any other paragraph the value is the value returned by the most recent highlightParagraph() call that applied to the preceding paragraph.
.PP
The value you return is up to you. We recommend only returning 0 (to signify that this paragraph's syntax highlighting does not affect the following paragraph), or a positive integer (to signify that this paragraph has ended in the middle of a paragraph spanning construct).
.PP
To find out which paragraph is highlighted, call currentParagraph().
.PP
For example, if you're writing a simple C++ syntax highlighter, you might designate 1 to signify "in comment". For a paragraph that ended in the middle of a comment you'd return 1, and for other paragraphs you'd return 0. In your parsing code if \fIendStateOfLastPara\fR was 1, you would highlight the text as a C++ comment until you reached the closing \fC*\fR\fC/\fR.
.SH "void QSyntaxHighlighter::rehighlight ()"
Redoes the highlighting of the whole document.
.SH "void QSyntaxHighlighter::setFormat ( int start, int count, const QFont & font, const QColor & color )"
This function is applied to the syntax highlighter's current paragraph (the text of which is passed to the highlightParagraph() function).
.PP
The specified \fIfont\fR and \fIcolor\fR are applied to the text from position \fIstart\fR for \fIcount\fR characters. (If \fIcount\fR is 0, nothing is done.)
.SH "void QSyntaxHighlighter::setFormat ( int start, int count, const QColor & color )"
This is an overloaded member function, provided for convenience. It behaves essentially like the above function.
.SH "void QSyntaxHighlighter::setFormat ( int start, int count, const QFont & font )"
This is an overloaded member function, provided for convenience. It behaves essentially like the above function.
.SH "QTextEdit * QSyntaxHighlighter::textEdit () const"
Returns the QTextEdit on which this syntax highlighter is
installed

.SH "SEE ALSO"
.BR http://doc.trolltech.com/qsyntaxhighlighter.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2007 Trolltech ASA, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports help us to help you. Thank you.
.P
The definitive Qt documentation is provided in HTML format; it is
located at $QTDIR/doc/html and can be read using Qt Assistant or with
a web browser. This man page is provided as a convenience for those
users who prefer man pages, although this format is not officially
supported by Trolltech. 
.P
If you find errors in this manual page, please report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qsyntaxhighlighter.3qt) and the Qt
version (3.3.8).
