'\" t
.TH QDomAttr 3qt "2 February 2007" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2007 Trolltech ASA.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QDomAttr \- Represents one attribute of a QDomElement
.SH SYNOPSIS
All the functions in this class are reentrant when Qt is built with thread support.</p>
.PP
\fC#include <qdom.h>\fR
.PP
Inherits QDomNode.
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "\fBQDomAttr\fR ()"
.br
.ti -1c
.BI "\fBQDomAttr\fR ( const QDomAttr & x )"
.br
.ti -1c
.BI "QDomAttr & \fBoperator=\fR ( const QDomAttr & x )"
.br
.ti -1c
.BI "\fB~QDomAttr\fR ()"
.br
.ti -1c
.BI "virtual QString \fBname\fR () const"
.br
.ti -1c
.BI "virtual bool \fBspecified\fR () const"
.br
.ti -1c
.BI "virtual QDomElement \fBownerElement\fR () const"
.br
.ti -1c
.BI "virtual QString \fBvalue\fR () const"
.br
.ti -1c
.BI "virtual void \fBsetValue\fR ( const QString & v )"
.br
.ti -1c
.BI "virtual QDomNode::NodeType \fBnodeType\fR () const"
.br
.ti -1c
.BI "virtual bool \fBisAttr\fR () const"
.br
.in -1c
.SH DESCRIPTION
The QDomAttr class represents one attribute of a QDomElement.
.PP
For example, the following piece of XML produces an element with no children, but two attributes:
.PP
.nf
.br
    <link href="http://www.trolltech.com" color="red" />
.br
.fi
.PP
You can access the attributes of an element with code like this:
.PP
.nf
.br
    QDomElement e = //...
.br
    //...
.br
    QDomAttr a = e.attributeNode( "href" );
.br
    cout << a.value() << endl;                // prints "http://www.trolltech.com"
.br
    a.setValue( "http://doc.trolltech.com" ); // change the node's attribute
.br
    QDomAttr a2 = e.attributeNode( "href" );
.br
    cout << a2.value() << endl;               // prints "http://doc.trolltech.com"
.br
.fi
.PP
This example also shows that changing an attribute received from an element changes the attribute of the element. If you do not want to change the value of the element's attribute you must use cloneNode() to get an independent copy of the attribute.
.PP
QDomAttr can return the name() and value() of an attribute. An attribute's value is set with setValue(). If specified() returns TRUE the value was either set in the document or set with setValue(); otherwise the value hasn't been set. The node this attribute is attached to (if any) is returned by ownerElement().
.PP
For further information about the Document Object Model see http://www.w3.org/TR/REC-DOM-Level-1/ and http://www.w3.org/TR/DOM-Level-2-Core/. For a more general introduction of the DOM implementation see the QDomDocument documentation.
.PP
See also XML.
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QDomAttr::QDomAttr ()"
Constructs an empty attribute.
.SH "QDomAttr::QDomAttr ( const QDomAttr & x )"
Constructs a copy of \fIx\fR.
.PP
The data of the copy is shared (shallow copy): modifying one node will also change the other. If you want to make a deep copy, use cloneNode().
.SH "QDomAttr::~QDomAttr ()"
Destroys the object and frees its resources.
.SH "bool QDomAttr::isAttr () const\fC [virtual]\fR"
Returns TRUE.
.PP
Reimplemented from QDomNode.
.SH "QString QDomAttr::name () const\fC [virtual]\fR"
Returns the attribute's name.
.SH "QDomNode::NodeType QDomAttr::nodeType () const\fC [virtual]\fR"
Returns AttributeNode.
.PP
Reimplemented from QDomNode.
.SH "QDomAttr & QDomAttr::operator= ( const QDomAttr & x )"
Assigns \fIx\fR to this DOM attribute.
.PP
The data of the copy is shared (shallow copy): modifying one node will also change the other. If you want to make a deep copy, use cloneNode().
.SH "QDomElement QDomAttr::ownerElement () const\fC [virtual]\fR"
Returns the element node this attribute is attached to or a null node if this attribute is not attached to any element.
.SH "void QDomAttr::setValue ( const QString & v )\fC [virtual]\fR"
Sets the attribute's value to \fIv\fR.
.PP
See also value().
.SH "bool QDomAttr::specified () const\fC [virtual]\fR"
Returns TRUE if the attribute has either been expicitly specified in the XML document or was set by the user with setValue(). Returns FALSE if the value hasn't been specified or set.
.PP
See also setValue().
.SH "QString QDomAttr::value () const\fC [virtual]\fR"
Returns the value of the attribute or QString::null if the attribute has not been specified.
.PP
See also specified() and setValue().

.SH "SEE ALSO"
.BR http://doc.trolltech.com/qdomattr.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2007 Trolltech ASA, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports help us to help you. Thank you.
.P
The definitive Qt documentation is provided in HTML format; it is
located at $QTDIR/doc/html and can be read using Qt Assistant or with
a web browser. This man page is provided as a convenience for those
users who prefer man pages, although this format is not officially
supported by Trolltech. 
.P
If you find errors in this manual page, please report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qdomattr.3qt) and the Qt
version (3.3.8).
