'\" t
.TH QXmlDTDHandler 3qt "2 February 2007" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2007 Trolltech ASA.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QXmlDTDHandler \- Interface to report DTD content of XML data
.SH SYNOPSIS
All the functions in this class are reentrant when Qt is built with thread support.</p>
.PP
\fC#include <qxml.h>\fR
.PP
Inherited by QXmlDefaultHandler.
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "virtual bool \fBnotationDecl\fR ( const QString & name, const QString & publicId, const QString & systemId ) = 0"
.br
.ti -1c
.BI "virtual bool \fBunparsedEntityDecl\fR ( const QString & name, const QString & publicId, const QString & systemId, const QString & notationName ) = 0"
.br
.ti -1c
.BI "virtual QString \fBerrorString\fR () = 0"
.br
.in -1c
.SH DESCRIPTION
The QXmlDTDHandler class provides an interface to report DTD content of XML data.
.PP
If an application needs information about notations and unparsed entities, it can implement this interface and register an instance with QXmlReader::setDTDHandler().
.PP
Note that this interface includes only those DTD events that the XML recommendation requires processors to report, i.e. notation and unparsed entity declarations using notationDecl() and unparsedEntityDecl() respectively.
.PP
See also the Introduction to SAX2.
.PP
See also QXmlDeclHandler, QXmlContentHandler, QXmlEntityResolver, QXmlErrorHandler, QXmlLexicalHandler, and XML.
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QString QXmlDTDHandler::errorString ()\fC [pure virtual]\fR"
The reader calls this function to get an error string if any of the handler functions returns FALSE.
.SH "bool QXmlDTDHandler::notationDecl ( const QString & name, const QString & publicId, const QString & systemId )\fC [pure virtual]\fR"
The reader calls this function when it has parsed a notation declaration.
.PP
The argument \fIname\fR is the notation name, \fIpublicId\fR is the notation's public identifier and \fIsystemId\fR is the notation's system identifier.
.PP
If this function returns FALSE the reader stops parsing and reports an error. The reader uses the function errorString() to get the error message.
.SH "bool QXmlDTDHandler::unparsedEntityDecl ( const QString & name, const QString & publicId, const QString & systemId, const QString & notationName )\fC [pure virtual]\fR"
The reader calls this function when it finds an unparsed entity declaration.
.PP
The argument \fIname\fR is the unparsed entity's name, \fIpublicId\fR is the entity's public identifier, \fIsystemId\fR is the entity's system identifier and \fInotationName\fR is the name of the associated notation.
.PP
If this function returns FALSE the reader stops parsing and
reports an error. The reader uses the function errorString() to
get the error message.

.SH "SEE ALSO"
.BR http://doc.trolltech.com/qxmldtdhandler.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2007 Trolltech ASA, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports help us to help you. Thank you.
.P
The definitive Qt documentation is provided in HTML format; it is
located at $QTDIR/doc/html and can be read using Qt Assistant or with
a web browser. This man page is provided as a convenience for those
users who prefer man pages, although this format is not officially
supported by Trolltech. 
.P
If you find errors in this manual page, please report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qxmldtdhandler.3qt) and the Qt
version (3.3.8).
