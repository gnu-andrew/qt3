'\" t
.TH QSqlError 3qt "2 February 2007" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2007 Trolltech ASA.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QSqlError \- SQL database error information
.SH SYNOPSIS
\fC#include <qsqlerror.h>\fR
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "enum \fBType\fR { None, Connection, Statement, Transaction, Unknown }"
.br
.ti -1c
.BI "\fBQSqlError\fR ( const QString & driverText = QString::null, const QString & databaseText = QString::null, int type = QSqlError::None, int number = -1 )"
.br
.ti -1c
.BI "\fBQSqlError\fR ( const QSqlError & other )"
.br
.ti -1c
.BI "QSqlError & \fBoperator=\fR ( const QSqlError & other )"
.br
.ti -1c
.BI "virtual \fB~QSqlError\fR ()"
.br
.ti -1c
.BI "QString \fBdriverText\fR () const"
.br
.ti -1c
.BI "virtual void \fBsetDriverText\fR ( const QString & driverText )"
.br
.ti -1c
.BI "QString \fBdatabaseText\fR () const"
.br
.ti -1c
.BI "virtual void \fBsetDatabaseText\fR ( const QString & databaseText )"
.br
.ti -1c
.BI "int \fBtype\fR () const"
.br
.ti -1c
.BI "virtual void \fBsetType\fR ( int type )"
.br
.ti -1c
.BI "int \fBnumber\fR () const"
.br
.ti -1c
.BI "virtual void \fBsetNumber\fR ( int number )"
.br
.ti -1c
.BI "QString \fBtext\fR () const"
.br
.ti -1c
.BI "void showMessage ( const QString & msg = QString::null ) const  \fI(obsolete)\fR"
.br
.in -1c
.SH DESCRIPTION
The QSqlError class provides SQL database error information.
.PP
This class is used to report database-specific errors. An error description and (if appropriate) a database-specific error number can be obtained using this class.
.PP
See also Database Classes.
.SS "Member Type Documentation"
.SH "QSqlError::Type"
This enum type describes the type of SQL error that occurred.
.TP
\fCQSqlError::None\fR - no error occurred
.TP
\fCQSqlError::Connection\fR - connection error
.TP
\fCQSqlError::Statement\fR - SQL statement syntax error
.TP
\fCQSqlError::Transaction\fR - transaction failed error
.TP
\fCQSqlError::Unknown\fR - unknown error
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QSqlError::QSqlError ( const QString & driverText = QString::null, const QString & databaseText = QString::null, int type = QSqlError::None, int number = -1 )"
Constructs an error containing the driver error text \fIdriverText\fR, the database-specific error text \fIdatabaseText\fR, the type \fItype\fR and the optional error number \fInumber\fR.
.SH "QSqlError::QSqlError ( const QSqlError & other )"
Creates a copy of \fIother\fR.
.SH "QSqlError::~QSqlError ()\fC [virtual]\fR"
Destroys the object and frees any allocated resources.
.SH "QString QSqlError::databaseText () const"
Returns the text of the error as reported by the database. This may contain database-specific descriptions.
.SH "QString QSqlError::driverText () const"
Returns the text of the error as reported by the driver. This may contain database-specific descriptions.
.SH "int QSqlError::number () const"
Returns the database-specific error number, or -1 if it cannot be determined.
.SH "QSqlError & QSqlError::operator= ( const QSqlError & other )"
Sets the error equal to \fIother\fR.
.SH "void QSqlError::setDatabaseText ( const QString & databaseText )\fC [virtual]\fR"
Sets the database error text to the value of \fIdatabaseText\fR.
.SH "void QSqlError::setDriverText ( const QString & driverText )\fC [virtual]\fR"
Sets the driver error text to the value of \fIdriverText\fR.
.SH "void QSqlError::setNumber ( int number )\fC [virtual]\fR"
Sets the database-specific error number to \fInumber\fR.
.SH "void QSqlError::setType ( int type )\fC [virtual]\fR"
Sets the error type to the value of \fItype\fR.
.SH "void QSqlError::showMessage ( const QString & msg = QString::null ) const"
\fBThis function is obsolete.\fR It is provided to keep old source working. We strongly advise against using it in new code.
.PP
This is a convenience function that pops up a QMessageBox containing the message returned by text(). An additional string can be passed in via the \fImsg\fR parameter, which will be concatenated with the text() message.
.PP
See also text(), driverText(), and databaseText().
.SH "QString QSqlError::text () const"
This is a convenience function that returns databaseText() and driverText() concatenated into a single string.
.PP
See also showMessage(), driverText(), and databaseText().
.SH "int QSqlError::type () const"
Returns the error type, or -1 if the type cannot be determined.
.PP
See also QSqlError::Type.

.SH "SEE ALSO"
.BR http://doc.trolltech.com/qsqlerror.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2007 Trolltech ASA, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports help us to help you. Thank you.
.P
The definitive Qt documentation is provided in HTML format; it is
located at $QTDIR/doc/html and can be read using Qt Assistant or with
a web browser. This man page is provided as a convenience for those
users who prefer man pages, although this format is not officially
supported by Trolltech. 
.P
If you find errors in this manual page, please report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qsqlerror.3qt) and the Qt
version (3.3.8).
