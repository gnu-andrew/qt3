'\" t
.TH QDictIterator 3qt "2 February 2007" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2007 Trolltech ASA.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QDictIterator \- Iterator for QDict collections
.SH SYNOPSIS
\fC#include <qdict.h>\fR
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "\fBQDictIterator\fR ( const QDict<type> & dict )"
.br
.ti -1c
.BI "\fB~QDictIterator\fR ()"
.br
.ti -1c
.BI "uint \fBcount\fR () const"
.br
.ti -1c
.BI "bool \fBisEmpty\fR () const"
.br
.ti -1c
.BI "type * \fBtoFirst\fR ()"
.br
.ti -1c
.BI "\fBoperator type *\fR () const"
.br
.ti -1c
.BI "type * \fBcurrent\fR () const"
.br
.ti -1c
.BI "QString \fBcurrentKey\fR () const"
.br
.ti -1c
.BI "type * \fBoperator()\fR ()"
.br
.ti -1c
.BI "type * \fBoperator++\fR ()"
.br
.in -1c
.SH DESCRIPTION
The QDictIterator class provides an iterator for QDict collections.
.PP
QDictIterator is implemented as a template class. Define a template instance QDictIterator<X> to create a dictionary iterator that operates on QDict<X> (dictionary of X*).
.PP
The traversal order is arbitrary; when we speak of the "first"," last" and "next" item we are talking in terms of this arbitrary order.
.PP
Multiple iterators may independently traverse the same dictionary. A QDict knows about all the iterators that are operating on the dictionary. When an item is removed from the dictionary, QDict updates all iterators that are referring to the removed item to point to the next item in the (arbitrary) traversal order.
.PP
Example:
.PP
.nf
.br
    QDict<QLineEdit> fields;
.br
    fields.insert( "forename", new QLineEdit( this ) );
.br
    fields.insert( "surname", new QLineEdit( this ) );
.br
    fields.insert( "age", new QLineEdit( this ) );
.br
.br
    fields["forename"]->setText( "Homer" );
.br
    fields["surname"]->setText( "Simpson" );
.br
    fields["age"]->setText( "45" );
.br
.br
    QDictIterator<QLineEdit> it( fields );
.br
    for( ; it.current(); ++it )
.br
        cout << it.currentKey() << ": " << it.current()->text() << endl;
.br
    cout << endl;
.br
.br
    // Output (random order):
.br
    //  age: 45
.br
    //  surname: Simpson
.br
    //  forename: Homer
.br
.fi
In the example we insert some pointers to line edits into a dictionary, then iterate over the dictionary printing the strings associated with the line edits.
.PP
See also QDict, Collection Classes, and Non-GUI Classes.
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QDictIterator::QDictIterator ( const QDict<type> & dict )"
Constructs an iterator for \fIdict\fR. The current iterator item is set to point to the first item in the dictionary, \fIdict\fR. First in this context means first in the arbitrary traversal order.
.SH "QDictIterator::~QDictIterator ()"
Destroys the iterator.
.SH "uint QDictIterator::count () const"
Returns the number of items in the dictionary over which the iterator is operating.
.PP
See also isEmpty().
.SH "type * QDictIterator::current () const"
Returns a pointer to the current iterator item's value.
.SH "QString QDictIterator::currentKey () const"
Returns the current iterator item's key.
.SH "bool QDictIterator::isEmpty () const"
Returns TRUE if the dictionary is empty, i.e. count() == 0; otherwise returns FALSE.
.PP
See also count().
.SH "QDictIterator::operator type * () const"
Cast operator. Returns a pointer to the current iterator item. Same as current().
.SH "type * QDictIterator::operator() ()"
Makes the next item current and returns the original current item.
.PP
If the current iterator item was the last item in the dictionary or if it was 0, 0 is returned.
.SH "type * QDictIterator::operator++ ()"
Prefix ++ makes the next item current and returns the new current item.
.PP
If the current iterator item was the last item in the dictionary or if it was 0, 0 is returned.
.SH "type * QDictIterator::toFirst ()"
Resets the iterator, making the first item the first current item. First in this context means first in the arbitrary traversal order. Returns a pointer to this item.
.PP
If the dictionary is empty it sets the current item to 0 and
returns 0.

.SH "SEE ALSO"
.BR http://doc.trolltech.com/qdictiterator.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2007 Trolltech ASA, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports help us to help you. Thank you.
.P
The definitive Qt documentation is provided in HTML format; it is
located at $QTDIR/doc/html and can be read using Qt Assistant or with
a web browser. This man page is provided as a convenience for those
users who prefer man pages, although this format is not officially
supported by Trolltech. 
.P
If you find errors in this manual page, please report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qdictiterator.3qt) and the Qt
version (3.3.8).
