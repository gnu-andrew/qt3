'\" t
.TH QDomNamedNodeMap 3qt "2 February 2007" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2007 Trolltech ASA.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QDomNamedNodeMap \- Collection of nodes that can be accessed by name
.SH SYNOPSIS
All the functions in this class are reentrant when Qt is built with thread support.</p>
.PP
\fC#include <qdom.h>\fR
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "\fBQDomNamedNodeMap\fR ()"
.br
.ti -1c
.BI "\fBQDomNamedNodeMap\fR ( const QDomNamedNodeMap & n )"
.br
.ti -1c
.BI "QDomNamedNodeMap & \fBoperator=\fR ( const QDomNamedNodeMap & n )"
.br
.ti -1c
.BI "bool \fBoperator==\fR ( const QDomNamedNodeMap & n ) const"
.br
.ti -1c
.BI "bool \fBoperator!=\fR ( const QDomNamedNodeMap & n ) const"
.br
.ti -1c
.BI "\fB~QDomNamedNodeMap\fR ()"
.br
.ti -1c
.BI "QDomNode \fBnamedItem\fR ( const QString & name ) const"
.br
.ti -1c
.BI "QDomNode \fBsetNamedItem\fR ( const QDomNode & newNode )"
.br
.ti -1c
.BI "QDomNode \fBremoveNamedItem\fR ( const QString & name )"
.br
.ti -1c
.BI "QDomNode \fBitem\fR ( int index ) const"
.br
.ti -1c
.BI "QDomNode \fBnamedItemNS\fR ( const QString & nsURI, const QString & localName ) const"
.br
.ti -1c
.BI "QDomNode \fBsetNamedItemNS\fR ( const QDomNode & newNode )"
.br
.ti -1c
.BI "QDomNode \fBremoveNamedItemNS\fR ( const QString & nsURI, const QString & localName )"
.br
.ti -1c
.BI "uint \fBlength\fR () const"
.br
.ti -1c
.BI "uint \fBcount\fR () const"
.br
.ti -1c
.BI "bool \fBcontains\fR ( const QString & name ) const"
.br
.in -1c
.SH DESCRIPTION
The QDomNamedNodeMap class contains a collection of nodes that can be accessed by name.
.PP
Note that QDomNamedNodeMap does not inherit from QDomNodeList. QDomNamedNodeMaps do not provide any specific node ordering. Although nodes in a QDomNamedNodeMap may be accessed by an ordinal index, this is simply to allow a convenient enumeration of the contents of a QDomNamedNodeMap, and does not imply that the DOM specifies an ordering of the nodes.
.PP
The QDomNamedNodeMap is used in three places: <ol type=1>
.IP 1
QDomDocumentType::entities() returns a map of all entities described in the DTD.
.IP 2
QDomDocumentType::notations() returns a map of all notations described in the DTD.
.IP 3
QDomNode::attributes() returns a map of all attributes of an element.
.PP
Items in the map are identified by the name which QDomNode::name() returns. Nodes are retrieved using namedItem(), namedItemNS() or item(). New nodes are inserted with setNamedItem() or setNamedItemNS() and removed with removeNamedItem() or removeNamedItemNS(). Use contains() to see if an item with the given name is in the named node map. The number of items is returned by length().
.PP
Terminology: in this class we use "item" and "node" interchangeably.
.PP
See also XML.
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QDomNamedNodeMap::QDomNamedNodeMap ()"
Constructs an empty named node map.
.SH "QDomNamedNodeMap::QDomNamedNodeMap ( const QDomNamedNodeMap & n )"
Constructs a copy of \fIn\fR.
.SH "QDomNamedNodeMap::~QDomNamedNodeMap ()"
Destroys the object and frees its resources.
.SH "bool QDomNamedNodeMap::contains ( const QString & name ) const"
Returns TRUE if the map contains a node called \fIname\fR; otherwise returns FALSE.
.SH "uint QDomNamedNodeMap::count () const"
Returns the number of nodes in the map.
.PP
This function is the same as length().
.SH "QDomNode QDomNamedNodeMap::item ( int index ) const"
Retrieves the node at position \fIindex\fR.
.PP
This can be used to iterate over the map. Note that the nodes in the map are ordered arbitrarily.
.PP
See also length().
.SH "uint QDomNamedNodeMap::length () const"
Returns the number of nodes in the map.
.PP
See also item().
.SH "QDomNode QDomNamedNodeMap::namedItem ( const QString & name ) const"
Returns the node called \fIname\fR.
.PP
If the named node map does not contain such a node, a null node is returned. A node's name is the name returned by QDomNode::nodeName().
.PP
See also setNamedItem() and namedItemNS().
.SH "QDomNode QDomNamedNodeMap::namedItemNS ( const QString & nsURI, const QString & localName ) const"
Returns the node associated with the local name \fIlocalName\fR and the namespace URI \fInsURI\fR.
.PP
If the map does not contain such a node, a null node is returned.
.PP
See also setNamedItemNS() and namedItem().
.SH "bool QDomNamedNodeMap::operator!= ( const QDomNamedNodeMap & n ) const"
Returns TRUE if \fIn\fR and this named node map are not equal; otherwise returns FALSE.
.SH "QDomNamedNodeMap & QDomNamedNodeMap::operator= ( const QDomNamedNodeMap & n )"
Assigns \fIn\fR to this named node map.
.SH "bool QDomNamedNodeMap::operator== ( const QDomNamedNodeMap & n ) const"
Returns TRUE if \fIn\fR and this named node map are equal; otherwise returns FALSE.
.SH "QDomNode QDomNamedNodeMap::removeNamedItem ( const QString & name )"
Removes the node called \fIname\fR from the map.
.PP
The function returns the removed node or a null node if the map did not contain a node called \fIname\fR.
.PP
See also setNamedItem(), namedItem(), and removeNamedItemNS().
.SH "QDomNode QDomNamedNodeMap::removeNamedItemNS ( const QString & nsURI, const QString & localName )"
Removes the node with the local name \fIlocalName\fR and the namespace URI \fInsURI\fR from the map.
.PP
The function returns the removed node or a null node if the map did not contain a node with the local name \fIlocalName\fR and the namespace URI \fInsURI\fR.
.PP
See also setNamedItemNS(), namedItemNS(), and removeNamedItem().
.SH "QDomNode QDomNamedNodeMap::setNamedItem ( const QDomNode & newNode )"
Inserts the node \fInewNode\fR into the named node map. The name used by the map is the node name of \fInewNode\fR as returned by QDomNode::nodeName().
.PP
If the new node replaces an existing node, i.e. the map contains a node with the same name, the replaced node is returned.
.PP
See also namedItem(), removeNamedItem(), and setNamedItemNS().
.SH "QDomNode QDomNamedNodeMap::setNamedItemNS ( const QDomNode & newNode )"
Inserts the node \fInewNode\fR in the map. If a node with the same namespace URI and the same local name already exists in the map, it is replaced by \fInewNode\fR. If the new node replaces an existing node, the replaced node is returned.
.PP
See also namedItemNS(), removeNamedItemNS(), and setNamedItem().

.SH "SEE ALSO"
.BR http://doc.trolltech.com/qdomnamednodemap.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2007 Trolltech ASA, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports help us to help you. Thank you.
.P
The definitive Qt documentation is provided in HTML format; it is
located at $QTDIR/doc/html and can be read using Qt Assistant or with
a web browser. This man page is provided as a convenience for those
users who prefer man pages, although this format is not officially
supported by Trolltech. 
.P
If you find errors in this manual page, please report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qdomnamednodemap.3qt) and the Qt
version (3.3.8).
