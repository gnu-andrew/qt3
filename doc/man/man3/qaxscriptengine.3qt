'\" t
.TH QAxScriptEngine 3qt "2 February 2007" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2007 Trolltech ASA.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QAxScriptEngine \- Wrapper around a script engine
.SH SYNOPSIS
This class is part of the \fBQt ActiveQt Extension\fR.
.PP
\fC#include <qaxscript.h>\fR
.PP
Inherits QAxObject.
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "enum \fBState\fR { Uninitialized = 0, Initialized = 5, Started = 1, Connected = 2, Disconnected = 3, Closed = 4 }"
.br
.ti -1c
.BI "\fBQAxScriptEngine\fR ( const QString & language, QAxScript * script )"
.br
.ti -1c
.BI "\fB~QAxScriptEngine\fR ()"
.br
.ti -1c
.BI "bool \fBisValid\fR () const"
.br
.ti -1c
.BI "bool \fBhasIntrospection\fR () const"
.br
.ti -1c
.BI "QString \fBscriptLanguage\fR () const"
.br
.ti -1c
.BI "State \fBstate\fR () const"
.br
.ti -1c
.BI "void \fBsetState\fR ( State st )"
.br
.ti -1c
.BI "void \fBaddItem\fR ( const QString & name )"
.br
.ti -1c
.BI "long \fBqueryInterface\fR ( const QUuid & uuid, void ** iface ) const"
.br
.in -1c
.SH DESCRIPTION
This class is defined in the \fBQt ActiveQt Extension\fR, which can be found in the \fCqt/extensions\fR directory. It is not included in the main Qt API.
.PP
The QAxScriptEngine class provides a wrapper around a script engine.
.PP
Every instance of the QAxScriptEngine class represents an interpreter for script code in a particular scripting language. The class is usually not used directly. The QAxScript and QAxScriptManager classes provide convenient functions to handle and call script code.
.PP
Direct access to the script engine is provided through queryInterface().
.PP
\fBWarning:\fR This class is not available with the bcc5.5 and MingW compilers.
.SS "Member Type Documentation"
.SH "QAxScriptEngine::State"
The State enumeration defines the different states a script engine can be in.
.TP
\fCQAxScriptEngine::Uninitialized\fR - The script has been created, but not yet initialized
.TP
\fCQAxScriptEngine::Initialized\fR - The script has been initialized, but is not running
.TP
\fCQAxScriptEngine::Started\fR - The script can execute code, but does not yet handle events
.TP
\fCQAxScriptEngine::Connected\fR - The script can execute code and is connected so that it can handle events
.TP
\fCQAxScriptEngine::Disconnected\fR - The script is loaded, but is not connected to event sources
.TP
\fCQAxScriptEngine::Closed\fR - The script has been closed.
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QAxScriptEngine::QAxScriptEngine ( const QString & language, QAxScript * script )"
Constructs a QAxScriptEngine object interpreting script code in \fIlanguage\fR provided by the code in \fIscript\fR. This is usually done by the QAxScript class when loading a script.
.PP
Instances of QAxScriptEngine should always have both a language and a script.
.SH "QAxScriptEngine::~QAxScriptEngine ()"
Destroys the QAxScriptEngine object, releasing all allocated resources.
.SH "void QAxScriptEngine::addItem ( const QString & name )"
Registers an item with the script engine. Script code can refer to this item using \fIname\fR.
.SH "bool QAxScriptEngine::hasIntrospection () const"
Returns TRUE if the script engine supports introspection; otherwise returns FALSE.
.SH "bool QAxScriptEngine::isValid () const"
Returns TRUE if the script engine has been initialized correctly; otherwise returns FALSE.
.SH "long QAxScriptEngine::queryInterface ( const QUuid & uuid, void ** iface ) const"
Requests the interface \fIuuid\fR from the script engine object and sets the value of \fIiface\fR to the provided interface, or to 0 if the requested interface could not be provided.
.PP
Returns the result of the QueryInterface implementation of the COM object.
.SH "QString QAxScriptEngine::scriptLanguage () const"
Returns the scripting language, for example "VBScript", or "JScript".
.SH "void QAxScriptEngine::setState ( State st )"
Sets the state of the script engine to \fIst\fR. Calling this function is usually not necessary.
.SH "State QAxScriptEngine::state () const"
Returns the state of the script engine.

.SH "SEE ALSO"
.BR http://doc.trolltech.com/qaxscriptengine.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2007 Trolltech ASA, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports help us to help you. Thank you.
.P
The definitive Qt documentation is provided in HTML format; it is
located at $QTDIR/doc/html and can be read using Qt Assistant or with
a web browser. This man page is provided as a convenience for those
users who prefer man pages, although this format is not officially
supported by Trolltech. 
.P
If you find errors in this manual page, please report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qaxscriptengine.3qt) and the Qt
version (3.3.8).
