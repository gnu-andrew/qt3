'\" t
.TH QCanvasEllipse 3qt "2 February 2007" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2007 Trolltech ASA.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QCanvasEllipse \- Ellipse or ellipse segment on a QCanvas
.SH SYNOPSIS
\fC#include <qcanvas.h>\fR
.PP
Inherits QCanvasPolygonalItem.
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "\fBQCanvasEllipse\fR ( QCanvas * canvas )"
.br
.ti -1c
.BI "\fBQCanvasEllipse\fR ( int width, int height, QCanvas * canvas )"
.br
.ti -1c
.BI "\fBQCanvasEllipse\fR ( int width, int height, int startangle, int angle, QCanvas * canvas )"
.br
.ti -1c
.BI "\fB~QCanvasEllipse\fR ()"
.br
.ti -1c
.BI "int \fBwidth\fR () const"
.br
.ti -1c
.BI "int \fBheight\fR () const"
.br
.ti -1c
.BI "void \fBsetSize\fR ( int width, int height )"
.br
.ti -1c
.BI "void \fBsetAngles\fR ( int start, int length )"
.br
.ti -1c
.BI "int \fBangleStart\fR () const"
.br
.ti -1c
.BI "int \fBangleLength\fR () const"
.br
.ti -1c
.BI "virtual int \fBrtti\fR () const"
.br
.in -1c
.SS "Protected Members"
.in +1c
.ti -1c
.BI "virtual void \fBdrawShape\fR ( QPainter & p )"
.br
.in -1c
.SH DESCRIPTION
The QCanvasEllipse class provides an ellipse or ellipse segment on a QCanvas.
.PP
A canvas item that paints an ellipse or ellipse segment with a QBrush. The ellipse's height, width, start angle and angle length can be set at construction time. The size can be changed at runtime with setSize(), and the angles can be changed (if you're displaying an ellipse segment rather than a whole ellipse) with setAngles().
.PP
Note that angles are specified in 16ths of a degree.
.PP
<center>
.ce 1
.B "[Image Omitted]"
.PP
</center>
.PP
If a start angle and length angle are set then an ellipse segment will be drawn. The start angle is the angle that goes from zero in a counter-clockwise direction (shown in green in the diagram). The length angle is the angle from the start angle in a counter-clockwise direction (shown in blue in the diagram). The blue segment is the segment of the ellipse that would be drawn. If no start angle and length angle are specified the entire ellipse is drawn.
.PP
The ellipse can be drawn on a painter with drawShape().
.PP
Like any other canvas item ellipses can be moved with move() and moveBy(), or by setting coordinates with setX(), setY() and setZ().
.PP
Note: QCanvasEllipse does not use the pen.
.PP
See also Graphics Classes and Image Processing Classes.
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QCanvasEllipse::QCanvasEllipse ( QCanvas * canvas )"
Constructs a 32x32 ellipse, centered at (0, 0) on \fIcanvas\fR.
.SH "QCanvasEllipse::QCanvasEllipse ( int width, int height, QCanvas * canvas )"
Constructs a \fIwidth\fR by \fIheight\fR pixel ellipse, centered at (0, 0) on \fIcanvas\fR.
.SH "QCanvasEllipse::QCanvasEllipse ( int width, int height, int startangle, int angle, QCanvas * canvas )"
Constructs a \fIwidth\fR by \fIheight\fR pixel ellipse, centered at (0, 0) on \fIcanvas\fR. Only a segment of the ellipse is drawn, starting at angle \fIstartangle\fR, and extending for angle \fIangle\fR (the angle length).
.PP
Note that angles are specified in <small><sup>1</sup>/<sub>16</sub></small>ths of a degree.
.SH "QCanvasEllipse::~QCanvasEllipse ()"
Destroys the ellipse.
.SH "int QCanvasEllipse::angleLength () const"
Returns the length angle (the extent of the ellipse segment) in 16ths of a degree. Initially this will be 360 * 16 (a complete ellipse).
.PP
See also setAngles() and angleStart().
.SH "int QCanvasEllipse::angleStart () const"
Returns the start angle in 16ths of a degree. Initially this will be 0.
.PP
See also setAngles() and angleLength().
.SH "void QCanvasEllipse::drawShape ( QPainter & p )\fC [virtual protected]\fR"
Draws the ellipse, centered at x(), y() using the painter \fIp\fR.
.PP
Note that QCanvasEllipse does not support an outline (the pen is always NoPen).
.PP
Reimplemented from QCanvasPolygonalItem.
.SH "int QCanvasEllipse::height () const"
Returns the height of the ellipse.
.SH "int QCanvasEllipse::rtti () const\fC [virtual]\fR"
Returns 6 (QCanvasItem::Rtti_Ellipse).
.PP
See also QCanvasItem::rtti().
.PP
Reimplemented from QCanvasPolygonalItem.
.SH "void QCanvasEllipse::setAngles ( int start, int length )"
Sets the angles for the ellipse. The start angle is \fIstart\fR and the extent of the segment is \fIlength\fR (the angle length) from the \fIstart\fR. The angles are specified in 16ths of a degree. By default the ellipse will start at 0 and have an angle length of 360 * 16 (a complete ellipse).
.PP
See also angleStart() and angleLength().
.SH "void QCanvasEllipse::setSize ( int width, int height )"
Sets the \fIwidth\fR and \fIheight\fR of the ellipse.
.SH "int QCanvasEllipse::width () const"
Returns the width of the ellipse.

.SH "SEE ALSO"
.BR http://doc.trolltech.com/qcanvasellipse.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2007 Trolltech ASA, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports help us to help you. Thank you.
.P
The definitive Qt documentation is provided in HTML format; it is
located at $QTDIR/doc/html and can be read using Qt Assistant or with
a web browser. This man page is provided as a convenience for those
users who prefer man pages, although this format is not officially
supported by Trolltech. 
.P
If you find errors in this manual page, please report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qcanvasellipse.3qt) and the Qt
version (3.3.8).
