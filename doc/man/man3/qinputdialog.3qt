'\" t
.TH QInputDialog 3qt "2 February 2007" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2007 Trolltech ASA.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QInputDialog \- Simple convenience dialog to get a single value from the user
.SH SYNOPSIS
\fC#include <qinputdialog.h>\fR
.PP
Inherits QDialog.
.PP
.SS "Static Public Members"
<li class=fn>QString \fBgetText\fR ( const QString & caption, const QString & label, QLineEdit::EchoMode mode = QLineEdit::Normal, const QString & text = QString::null, bool * ok = 0, QWidget * parent = 0, const char * name = 0 ) <li class=fn>int \fBgetInteger\fR ( const QString & caption, const QString & label, int value = 0, int minValue = -2147483647, int maxValue = 2147483647, int step = 1, bool * ok = 0, QWidget * parent = 0, const char * name = 0 ) <li class=fn>double \fBgetDouble\fR ( const QString & caption, const QString & label, double value = 0, double minValue = -2147483647, double maxValue = 2147483647, int decimals = 1, bool * ok = 0, QWidget * parent = 0, const char * name = 0 ) <li class=fn>QString \fBgetItem\fR ( const QString & caption, const QString & label, const QStringList & list, int current = 0, bool editable = TRUE, bool * ok = 0, QWidget * parent = 0, const char * name = 0 )
.SH DESCRIPTION
The QInputDialog class provides a simple convenience dialog to get a single value from the user.
.PP
The input value can be a string, a number or an item from a list. A label must be set to tell the user what they should enter.
.PP
Four static convenience functions are provided: getText(), getInteger(), getDouble() and getItem(). All the functions can be used in a similar way, for example:
.PP
.nf
.br
    bool ok;
.br
    QString text = QInputDialog::getText(
.br
            "MyApp 3000", "Enter your name:", QLineEdit::Normal,
.br
            QString::null, &ok, this );
.br
    if ( ok && !text.isEmpty() ) {
.br
        // user entered something and pressed OK
.br
    } else {
.br
        // user entered nothing or pressed Cancel
.br
    }
.br
.fi
.PP
<center>
.ce 1
.B "[Image Omitted]"
.PP
</center>
.PP
See also Dialog Classes.
.SH MEMBER FUNCTION DOCUMENTATION
.SH "double QInputDialog::getDouble ( const QString & caption, const QString & label, double value = 0, double minValue = -2147483647, double maxValue = 2147483647, int decimals = 1, bool * ok = 0, QWidget * parent = 0, const char * name = 0 )\fC [static]\fR"
Static convenience function to get a floating point number from the user. \fIcaption\fR is the text which is displayed in the title bar of the dialog. \fIlabel\fR is the text which is shown to the user (it should say what should be entered). \fIvalue\fR is the default floating point number that the line edit will be set to. \fIminValue\fR and \fImaxValue\fR are the minimum and maximum values the user may choose, and \fIdecimals\fR is the maximum number of decimal places the number may have.
.PP
If \fIok\fR is not-null \fI*\fR\fIok\fR will be set to TRUE if the user pressed OK and to FALSE if the user pressed Cancel. The dialog's parent is \fIparent\fR; the dialog is called \fIname\fR. The dialog will be modal.
.PP
This function returns the floating point number which has been entered by the user.
.PP
Use this static function like this:
.PP
.nf
.br
    bool ok;
.br
    double res = QInputDialog::getDouble(
.br
            "MyApp 3000", "Enter a decimal number:", 33.7, 0,
.br
            1000, 2, &ok, this );
.br
    if ( ok ) {
.br
        // user entered something and pressed OK
.br
    } else {
.br
        // user pressed Cancel
.br
    }
.br
.fi
.SH "int QInputDialog::getInteger ( const QString & caption, const QString & label, int value = 0, int minValue = -2147483647, int maxValue = 2147483647, int step = 1, bool * ok = 0, QWidget * parent = 0, const char * name = 0 )\fC [static]\fR"
Static convenience function to get an integer input from the user. \fIcaption\fR is the text which is displayed in the title bar of the dialog. \fIlabel\fR is the text which is shown to the user (it should say what should be entered). \fIvalue\fR is the default integer which the spinbox will be set to. \fIminValue\fR and \fImaxValue\fR are the minimum and maximum values the user may choose, and \fIstep\fR is the amount by which the values change as the user presses the arrow buttons to increment or decrement the value.
.PP
If \fIok\fR is not-null *\fIok\fR will be set to TRUE if the user pressed OK and to FALSE if the user pressed Cancel. The dialog's parent is \fIparent\fR; the dialog is called \fIname\fR. The dialog will be modal.
.PP
This function returns the integer which has been entered by the user.
.PP
Use this static function like this:
.PP
.nf
.br
    bool ok;
.br
    int res = QInputDialog::getInteger(
.br
            "MyApp 3000", "Enter a number:", 22, 0, 1000, 2,
.br
            &ok, this );
.br
    if ( ok ) {
.br
        // user entered something and pressed OK
.br
    } else {
.br
        // user pressed Cancel
.br
    }
.br
.fi
.SH "QString QInputDialog::getItem ( const QString & caption, const QString & label, const QStringList & list, int current = 0, bool editable = TRUE, bool * ok = 0, QWidget * parent = 0, const char * name = 0 )\fC [static]\fR"
Static convenience function to let the user select an item from a string list. \fIcaption\fR is the text which is displayed in the title bar of the dialog. \fIlabel\fR is the text which is shown to the user (it should say what should be entered). \fIlist\fR is the string list which is inserted into the combobox, and \fIcurrent\fR is the number of the item which should be the current item. If \fIeditable\fR is TRUE the user can enter their own text; if \fIeditable\fR is FALSE the user may only select one of the existing items.
.PP
If \fIok\fR is not-null \fI*\fR\fIok\fR will be set to TRUE if the user pressed OK and to FALSE if the user pressed Cancel. The dialog's parent is \fIparent\fR; the dialog is called \fIname\fR. The dialog will be modal.
.PP
This function returns the text of the current item, or if \fIeditable\fR is TRUE, the current text of the combobox.
.PP
Use this static function like this:
.PP
.nf
.br
    QStringList lst;
.br
    lst << "First" << "Second" << "Third" << "Fourth" << "Fifth";
.br
    bool ok;
.br
    QString res = QInputDialog::getItem(
.br
            "MyApp 3000", "Select an item:", lst, 1, TRUE, &ok,
.br
            this );
.br
    if ( ok ) {
.br
        // user selected an item and pressed OK
.br
    } else {
.br
        // user pressed Cancel
.br
    }
.br
.fi
.SH "QString QInputDialog::getText ( const QString & caption, const QString & label, QLineEdit::EchoMode mode = QLineEdit::Normal, const QString & text = QString::null, bool * ok = 0, QWidget * parent = 0, const char * name = 0 )\fC [static]\fR"
Static convenience function to get a string from the user. \fIcaption\fR is the text which is displayed in the title bar of the dialog. \fIlabel\fR is the text which is shown to the user (it should say what should be entered). \fItext\fR is the default text which is placed in the line edit. The \fImode\fR is the echo mode the line edit will use. If \fIok\fR is not-null \fI*\fR\fIok\fR will be set to TRUE if the user pressed OK and to FALSE if the user pressed Cancel. The dialog's parent is \fIparent\fR; the dialog is called \fIname\fR. The dialog will be modal.
.PP
This function returns the text which has been entered in the line edit. It will not return an empty string.
.PP
Use this static function like this:
.PP
.nf
.br
    bool ok;
.br
    QString text = QInputDialog::getText(
.br
            "MyApp 3000", "Enter your name:", QLineEdit::Normal,
.br
            QString::null, &ok, this );
.br
    if ( ok && !text.isEmpty() ) {
.br
        // user entered something and pressed OK
.br
    } else {
.br
        // user entered nothing or pressed Cancel
.br
    }
.br
.fi

.SH "SEE ALSO"
.BR http://doc.trolltech.com/qinputdialog.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2007 Trolltech ASA, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports help us to help you. Thank you.
.P
The definitive Qt documentation is provided in HTML format; it is
located at $QTDIR/doc/html and can be read using Qt Assistant or with
a web browser. This man page is provided as a convenience for those
users who prefer man pages, although this format is not officially
supported by Trolltech. 
.P
If you find errors in this manual page, please report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qinputdialog.3qt) and the Qt
version (3.3.8).
