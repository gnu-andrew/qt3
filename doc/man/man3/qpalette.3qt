'\" t
.TH QPalette 3qt "2 February 2007" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2007 Trolltech ASA.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QPalette \- Color groups for each widget state
.SH SYNOPSIS
\fC#include <qpalette.h>\fR
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "\fBQPalette\fR ()"
.br
.ti -1c
.BI "QPalette ( const QColor & button )  \fI(obsolete)\fR"
.br
.ti -1c
.BI "\fBQPalette\fR ( const QColor & button, const QColor & background )"
.br
.ti -1c
.BI "\fBQPalette\fR ( const QColorGroup & active, const QColorGroup & disabled, const QColorGroup & inactive )"
.br
.ti -1c
.BI "\fBQPalette\fR ( const QPalette & p )"
.br
.ti -1c
.BI "\fB~QPalette\fR ()"
.br
.ti -1c
.BI "QPalette & \fBoperator=\fR ( const QPalette & p )"
.br
.ti -1c
.BI "enum \fBColorGroup\fR { Disabled, Active, Inactive, NColorGroups, Normal = Active }"
.br
.ti -1c
.BI "const QColor & \fBcolor\fR ( ColorGroup gr, QColorGroup::ColorRole r ) const"
.br
.ti -1c
.BI "const QBrush & \fBbrush\fR ( ColorGroup gr, QColorGroup::ColorRole r ) const"
.br
.ti -1c
.BI "void \fBsetColor\fR ( ColorGroup gr, QColorGroup::ColorRole r, const QColor & c )"
.br
.ti -1c
.BI "void \fBsetBrush\fR ( ColorGroup gr, QColorGroup::ColorRole r, const QBrush & b )"
.br
.ti -1c
.BI "void \fBsetColor\fR ( QColorGroup::ColorRole r, const QColor & c )"
.br
.ti -1c
.BI "void \fBsetBrush\fR ( QColorGroup::ColorRole r, const QBrush & b )"
.br
.ti -1c
.BI "QPalette \fBcopy\fR () const"
.br
.ti -1c
.BI "const QColorGroup & \fBactive\fR () const"
.br
.ti -1c
.BI "const QColorGroup & \fBdisabled\fR () const"
.br
.ti -1c
.BI "const QColorGroup & \fBinactive\fR () const"
.br
.ti -1c
.BI "const QColorGroup & normal () const  \fI(obsolete)\fR"
.br
.ti -1c
.BI "void \fBsetActive\fR ( const QColorGroup & g )"
.br
.ti -1c
.BI "void \fBsetDisabled\fR ( const QColorGroup & g )"
.br
.ti -1c
.BI "void \fBsetInactive\fR ( const QColorGroup & g )"
.br
.ti -1c
.BI "void setNormal ( const QColorGroup & cg )  \fI(obsolete)\fR"
.br
.ti -1c
.BI "bool \fBoperator==\fR ( const QPalette & p ) const"
.br
.ti -1c
.BI "bool \fBoperator!=\fR ( const QPalette & p ) const"
.br
.ti -1c
.BI "bool \fBisCopyOf\fR ( const QPalette & p )"
.br
.ti -1c
.BI "int \fBserialNumber\fR () const"
.br
.in -1c
.SH RELATED FUNCTION DOCUMENTATION
.in +1c
.ti -1c
.BI "QDataStream & \fBoperator<<\fR ( QDataStream & s, const QPalette & p )"
.br
.ti -1c
.BI "QDataStream & \fBoperator>>\fR ( QDataStream & s, QPalette & p )"
.br
.in -1c
.SH DESCRIPTION
The QPalette class contains color groups for each widget state.
.PP
A palette consists of three color groups: \fIactive\fR, \fIdisabled\fR, and \fIinactive\fR. All widgets contain a palette, and all widgets in Qt use their palette to draw themselves. This makes the user interface easily configurable and easier to keep consistent.
.PP
If you create a new widget we strongly recommend that you use the colors in the palette rather than hard-coding specific colors.
.PP
The color groups:
.TP
The active() group is used for the window that has keyboard focus.
.TP
The inactive() group is used for other windows.
.TP
The disabled() group is used for widgets (not windows) that are disabled for some reason.
.PP
Both active and inactive windows can contain disabled widgets. (Disabled widgets are often called \fIinaccessible\fR or \fIgrayed out\fR.)
.PP
In Motif style, active() and inactive() look the same. In Windows 2000 style and Macintosh Platinum style, the two styles look slightly different.
.PP
There are setActive(), setInactive(), and setDisabled() functions to modify the palette. (Qt also supports a normal() group; this is an obsolete alias for active(), supported for backwards compatibility.)
.PP
Colors and brushes can be set for particular roles in any of a palette's color groups with setColor() and setBrush().
.PP
You can copy a palette using the copy constructor and test to see if two palettes are \fIidentical\fR using isCopyOf().
.PP
See also QApplication::setPalette(), QWidget::palette, QColorGroup, QColor, Widget Appearance and Style, Graphics Classes, Image Processing Classes, and Implicitly and Explicitly Shared Classes.
.SS "Member Type Documentation"
.SH "QPalette::ColorGroup"
.TP
\fCQPalette::Disabled\fR
.TP
\fCQPalette::Active\fR
.TP
\fCQPalette::Inactive\fR
.TP
\fCQPalette::NColorGroups\fR
.TP
\fCQPalette::Normal\fR - synonym for Active
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QPalette::QPalette ()"
Constructs a palette that consists of color groups with only black colors.
.SH "QPalette::QPalette ( const QColor & button )"
\fBThis function is obsolete.\fR It is provided to keep old source working. We strongly advise against using it in new code.
.PP
Constructs a palette from the \fIbutton\fR color. The other colors are automatically calculated, based on this color. Background will be the button color as well.
.SH "QPalette::QPalette ( const QColor & button, const QColor & background )"
Constructs a palette from a \fIbutton\fR color and a \fIbackground\fR. The other colors are automatically calculated, based on these colors.
.SH "QPalette::QPalette ( const QColorGroup & active, const QColorGroup & disabled, const QColorGroup & inactive )"
Constructs a palette that consists of the three color groups \fIactive\fR, \fIdisabled\fR and \fIinactive\fR. See the Detailed Description for definitions of the color groups and QColorGroup::ColorRole for definitions of each color role in the three groups.
.PP
See also QColorGroup and QColorGroup::ColorRole.
.SH "QPalette::QPalette ( const QPalette & p )"
Constructs a copy of \fIp\fR.
.PP
This constructor is fast (it uses copy-on-write).
.SH "QPalette::~QPalette ()"
Destroys the palette.
.SH "const QColorGroup & QPalette::active () const"
Returns the active color group of this palette.
.PP
See also QColorGroup, setActive(), inactive(), and disabled().
.PP
Examples:
.)l themes/metal.cpp and themes/wood.cpp.
.SH "const QBrush & QPalette::brush ( ColorGroup gr, QColorGroup::ColorRole r ) const"
Returns the brush in color group \fIgr\fR, used for color role \fIr\fR.
.PP
See also color(), setBrush(), and QColorGroup::ColorRole.
.SH "const QColor & QPalette::color ( ColorGroup gr, QColorGroup::ColorRole r ) const"
Returns the color in color group \fIgr\fR, used for color role \fIr\fR.
.PP
See also brush(), setColor(), and QColorGroup::ColorRole.
.SH "QPalette QPalette::copy () const"
Returns a deep copy of this palette.
.PP
\fBWarning:\fR This is slower than the copy constructor and assignment operator and offers no benefits.
.SH "const QColorGroup & QPalette::disabled () const"
Returns the disabled color group of this palette.
.PP
See also QColorGroup, setDisabled(), active(), and inactive().
.PP
Examples:
.)l themes/metal.cpp and themes/wood.cpp.
.SH "const QColorGroup & QPalette::inactive () const"
Returns the inactive color group of this palette.
.PP
See also QColorGroup, setInactive(), active(), and disabled().
.SH "bool QPalette::isCopyOf ( const QPalette & p )"
Returns TRUE if this palette and \fIp\fR are copies of each other, i.e. one of them was created as a copy of the other and neither was subsequently modified; otherwise returns FALSE. This is much stricter than equality.
.PP
See also operator=() and operator==().
.SH "const QColorGroup & QPalette::normal () const"
\fBThis function is obsolete.\fR It is provided to keep old source working. We strongly advise against using it in new code.
.PP
Returns the active color group. Use active() instead.
.PP
See also setActive() and active().
.SH "bool QPalette::operator!= ( const QPalette & p ) const"
Returns TRUE (slowly) if this palette is different from \fIp\fR; otherwise returns FALSE (usually quickly).
.SH "QPalette & QPalette::operator= ( const QPalette & p )"
Assigns \fIp\fR to this palette and returns a reference to this palette.
.PP
This is fast (it uses copy-on-write).
.PP
See also copy().
.SH "bool QPalette::operator== ( const QPalette & p ) const"
Returns TRUE (usually quickly) if this palette is equal to \fIp\fR; otherwise returns FALSE (slowly).
.SH "int QPalette::serialNumber () const"
Returns a number that uniquely identifies this QPalette object. The serial number is intended for caching. Its value may not be used for anything other than equality testing.
.PP
Note that QPalette uses copy-on-write, and the serial number changes during the lazy copy operation (detach()), not during a shallow copy (copy constructor or assignment).
.PP
See also QPixmap, QPixmapCache, and QCache.
.SH "void QPalette::setActive ( const QColorGroup & g )"
Sets the Active color group to \fIg\fR.
.PP
See also active(), setDisabled(), setInactive(), and QColorGroup.
.SH "void QPalette::setBrush ( ColorGroup gr, QColorGroup::ColorRole r, const QBrush & b )"
Sets the brush in color group \fIgr\fR, used for color role \fIr\fR, to \fIb\fR.
.PP
See also brush(), setColor(), and QColorGroup::ColorRole.
.SH "void QPalette::setBrush ( QColorGroup::ColorRole r, const QBrush & b )"
This is an overloaded member function, provided for convenience. It behaves essentially like the above function.
.PP
Sets the brush in for color role \fIr\fR in all three color groups to \fIb\fR.
.PP
See also brush(), setColor(), QColorGroup::ColorRole, active(), inactive(), and disabled().
.SH "void QPalette::setColor ( ColorGroup gr, QColorGroup::ColorRole r, const QColor & c )"
Sets the brush in color group \fIgr\fR, used for color role \fIr\fR, to the solid color \fIc\fR.
.PP
See also setBrush(), color(), and QColorGroup::ColorRole.
.PP
Example: themes/themes.cpp.
.SH "void QPalette::setColor ( QColorGroup::ColorRole r, const QColor & c )"
This is an overloaded member function, provided for convenience. It behaves essentially like the above function.
.PP
Sets the brush color used for color role \fIr\fR to color \fIc\fR in all three color groups.
.PP
See also color(), setBrush(), and QColorGroup::ColorRole.
.SH "void QPalette::setDisabled ( const QColorGroup & g )"
Sets the Disabled color group to \fIg\fR.
.PP
See also disabled(), setActive(), and setInactive().
.SH "void QPalette::setInactive ( const QColorGroup & g )"
Sets the Inactive color group to \fIg\fR.
.PP
See also active(), setDisabled(), setActive(), and QColorGroup.
.SH "void QPalette::setNormal ( const QColorGroup & cg )"
\fBThis function is obsolete.\fR It is provided to keep old source working. We strongly advise against using it in new code.
.PP
Sets the active color group to \fIcg\fR. Use setActive() instead.
.PP
See also setActive() and active().
.SH RELATED FUNCTION DOCUMENTATION
.SH "QDataStream & operator<< ( QDataStream & s, const QPalette & p )"
Writes the palette, \fIp\fR to the stream \fIs\fR and returns a reference to the stream.
.PP
See also Format of the QDataStream operators.
.SH "QDataStream & operator>> ( QDataStream & s, QPalette & p )"
Reads a palette from the stream, \fIs\fR into the palette \fIp\fR, and returns a reference to the stream.
.PP
See also Format of the QDataStream operators.

.SH "SEE ALSO"
.BR http://doc.trolltech.com/qpalette.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2007 Trolltech ASA, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports help us to help you. Thank you.
.P
The definitive Qt documentation is provided in HTML format; it is
located at $QTDIR/doc/html and can be read using Qt Assistant or with
a web browser. This man page is provided as a convenience for those
users who prefer man pages, although this format is not officially
supported by Trolltech. 
.P
If you find errors in this manual page, please report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qpalette.3qt) and the Qt
version (3.3.8).
