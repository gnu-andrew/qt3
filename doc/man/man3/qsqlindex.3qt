'\" t
.TH QSqlIndex 3qt "2 February 2007" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2007 Trolltech ASA.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QSqlIndex \- Functions to manipulate and describe QSqlCursor and QSqlDatabase indexes
.SH SYNOPSIS
\fC#include <qsqlindex.h>\fR
.PP
Inherits QSqlRecord.
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "\fBQSqlIndex\fR ( const QString & cursorname = QString::null, const QString & name = QString::null )"
.br
.ti -1c
.BI "\fBQSqlIndex\fR ( const QSqlIndex & other )"
.br
.ti -1c
.BI "\fB~QSqlIndex\fR ()"
.br
.ti -1c
.BI "QSqlIndex & \fBoperator=\fR ( const QSqlIndex & other )"
.br
.ti -1c
.BI "virtual void \fBsetCursorName\fR ( const QString & cursorName )"
.br
.ti -1c
.BI "QString \fBcursorName\fR () const"
.br
.ti -1c
.BI "virtual void \fBsetName\fR ( const QString & name )"
.br
.ti -1c
.BI "QString \fBname\fR () const"
.br
.ti -1c
.BI "virtual void \fBappend\fR ( const QSqlField & field )"
.br
.ti -1c
.BI "virtual void \fBappend\fR ( const QSqlField & field, bool desc )"
.br
.ti -1c
.BI "bool \fBisDescending\fR ( int i ) const"
.br
.ti -1c
.BI "virtual void \fBsetDescending\fR ( int i, bool desc )"
.br
.in -1c
.SS "Static Public Members"
.in +1c
.ti -1c
.BI "QSqlIndex \fBfromStringList\fR ( const QStringList & l, const QSqlCursor * cursor )"
.br
.in -1c
.SH DESCRIPTION
The QSqlIndex class provides functions to manipulate and describe QSqlCursor and QSqlDatabase indexes.
.PP
This class is used to describe and manipulate QSqlCursor and QSqlDatabase indexes. An index refers to a single table or view in a database. Information about the fields that comprise the index can be used to generate SQL statements, or to affect the behavior of a QSqlCursor object.
.PP
Normally, QSqlIndex objects are created by QSqlDatabase or QSqlCursor.
.PP
See also Database Classes.
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QSqlIndex::QSqlIndex ( const QString & cursorname = QString::null, const QString & name = QString::null )"
Constructs an empty index using the cursor name \fIcursorname\fR and index name \fIname\fR.
.SH "QSqlIndex::QSqlIndex ( const QSqlIndex & other )"
Constructs a copy of \fIother\fR.
.SH "QSqlIndex::~QSqlIndex ()"
Destroys the object and frees any allocated resources.
.SH "void QSqlIndex::append ( const QSqlField & field )\fC [virtual]\fR"
Appends the field \fIfield\fR to the list of indexed fields. The field is appended with an ascending sort order.
.PP
Reimplemented from QSqlRecord.
.SH "void QSqlIndex::append ( const QSqlField & field, bool desc )\fC [virtual]\fR"
This is an overloaded member function, provided for convenience. It behaves essentially like the above function.
.PP
Appends the field \fIfield\fR to the list of indexed fields. The field is appended with an ascending sort order, unless \fIdesc\fR is TRUE.
.SH "QString QSqlIndex::cursorName () const"
Returns the name of the cursor which the index is associated with.
.SH "QSqlIndex QSqlIndex::fromStringList ( const QStringList & l, const QSqlCursor * cursor )\fC [static]\fR"
Returns an index based on the field descriptions in \fIl\fR and the cursor \fIcursor\fR. The field descriptions should be in the same format that toStringList() produces, for example, a surname field in the people table might be in one of these forms: "surname"," surname DESC" or "people.surname ASC".
.PP
See also toStringList().
.SH "bool QSqlIndex::isDescending ( int i ) const"
Returns TRUE if field \fIi\fR in the index is sorted in descending order; otherwise returns FALSE.
.SH "QString QSqlIndex::name () const"
Returns the name of the index.
.SH "QSqlIndex & QSqlIndex::operator= ( const QSqlIndex & other )"
Sets the index equal to \fIother\fR.
.SH "void QSqlIndex::setCursorName ( const QString & cursorName )\fC [virtual]\fR"
Sets the name of the cursor that the index is associated with to \fIcursorName\fR.
.SH "void QSqlIndex::setDescending ( int i, bool desc )\fC [virtual]\fR"
If \fIdesc\fR is TRUE, field \fIi\fR is sorted in descending order. Otherwise, field \fIi\fR is sorted in ascending order (the default). If the field does not exist, nothing happens.
.SH "void QSqlIndex::setName ( const QString & name )\fC [virtual]\fR"
Sets the name of the index to \fIname\fR.

.SH "SEE ALSO"
.BR http://doc.trolltech.com/qsqlindex.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2007 Trolltech ASA, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports help us to help you. Thank you.
.P
The definitive Qt documentation is provided in HTML format; it is
located at $QTDIR/doc/html and can be read using Qt Assistant or with
a web browser. This man page is provided as a convenience for those
users who prefer man pages, although this format is not officially
supported by Trolltech. 
.P
If you find errors in this manual page, please report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qsqlindex.3qt) and the Qt
version (3.3.8).
