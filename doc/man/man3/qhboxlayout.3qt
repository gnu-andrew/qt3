'\" t
.TH QHBoxLayout 3qt "2 February 2007" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2007 Trolltech ASA.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QHBoxLayout \- Lines up widgets horizontally
.SH SYNOPSIS
\fC#include <qlayout.h>\fR
.PP
Inherits QBoxLayout.
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "\fBQHBoxLayout\fR ( QWidget * parent, int margin = 0, int spacing = -1, const char * name = 0 )"
.br
.ti -1c
.BI "\fBQHBoxLayout\fR ( QLayout * parentLayout, int spacing = -1, const char * name = 0 )"
.br
.ti -1c
.BI "\fBQHBoxLayout\fR ( int spacing = -1, const char * name = 0 )"
.br
.ti -1c
.BI "\fB~QHBoxLayout\fR ()"
.br
.in -1c
.SH DESCRIPTION
The QHBoxLayout class lines up widgets horizontally.
.PP
This class is used to construct horizontal box layout objects. See QBoxLayout for more details.
.PP
The simplest use of the class is like this:
.PP
.nf
.br
        QBoxLayout * l = new QHBoxLayout( widget );
.br
        l->setAutoAdd( TRUE );
.br
        new QSomeWidget( widget );
.br
        new QSomeOtherWidget( widget );
.br
        new QAnotherWidget( widget );
.br
.fi
.PP
or like this:
.PP
.nf
.br
        QBoxLayout * l = new QHBoxLayout( widget );
.br
        l->addWidget( existingChildOfWidget );
.br
        l->addWidget( anotherChildOfWidget );
.br
.fi
.PP
<center>
.ce 1
.B "[Image Omitted]"
.PP
</center>
.PP
See also QVBoxLayout, QGridLayout, the Layout overview, Widget Appearance and Style, and Layout Management.
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QHBoxLayout::QHBoxLayout ( QWidget * parent, int margin = 0, int spacing = -1, const char * name = 0 )"
Constructs a new top-level horizontal box called \fIname\fR, with parent \fIparent\fR.
.PP
The \fImargin\fR is the number of pixels between the edge of the widget and its managed children. The \fIspacing\fR is the default number of pixels between neighboring children. If \fIspacing\fR is -1 the value of \fImargin\fR is used for \fIspacing\fR.
.SH "QHBoxLayout::QHBoxLayout ( QLayout * parentLayout, int spacing = -1, const char * name = 0 )"
Constructs a new horizontal box called name \fIname\fR and adds it to \fIparentLayout\fR.
.PP
The \fIspacing\fR is the default number of pixels between neighboring children. If \fIspacing\fR is -1, this QHBoxLayout will inherit its parent's spacing().
.SH "QHBoxLayout::QHBoxLayout ( int spacing = -1, const char * name = 0 )"
Constructs a new horizontal box called name \fIname\fR. You must add it to another layout.
.PP
The \fIspacing\fR is the default number of pixels between neighboring children. If \fIspacing\fR is -1, this QHBoxLayout will inherit its parent's spacing().
.SH "QHBoxLayout::~QHBoxLayout ()"
Destroys this box layout.
.PP
The layout's widgets aren't destroyed.

.SH "SEE ALSO"
.BR http://doc.trolltech.com/qhboxlayout.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2007 Trolltech ASA, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports help us to help you. Thank you.
.P
The definitive Qt documentation is provided in HTML format; it is
located at $QTDIR/doc/html and can be read using Qt Assistant or with
a web browser. This man page is provided as a convenience for those
users who prefer man pages, although this format is not officially
supported by Trolltech. 
.P
If you find errors in this manual page, please report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qhboxlayout.3qt) and the Qt
version (3.3.8).
