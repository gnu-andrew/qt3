'\" t
.TH QDirectPainter 3qt "2 February 2007" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2007 Trolltech ASA.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QDirectPainter \- Direct access to the video hardware
.SH SYNOPSIS
\fC#include <qdirectpainter_qws.h>\fR
.PP
Inherits QPainter.
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "\fBQDirectPainter\fR ( const QWidget * w )"
.br
.ti -1c
.BI "\fB~QDirectPainter\fR ()"
.br
.ti -1c
.BI "uchar * \fBframeBuffer\fR ()"
.br
.ti -1c
.BI "int \fBlineStep\fR ()"
.br
.ti -1c
.BI "int \fBtransformOrientation\fR ()"
.br
.ti -1c
.BI "int \fBnumRects\fR () const"
.br
.ti -1c
.BI "const QRect & \fBrect\fR ( int i ) const"
.br
.ti -1c
.BI "QRegion \fBregion\fR () const"
.br
.ti -1c
.BI "int \fBdepth\fR () const"
.br
.ti -1c
.BI "int \fBwidth\fR () const"
.br
.ti -1c
.BI "int \fBheight\fR () const"
.br
.ti -1c
.BI "int \fBxOffset\fR () const"
.br
.ti -1c
.BI "int \fByOffset\fR () const"
.br
.ti -1c
.BI "QPoint \fBoffset\fR () const"
.br
.ti -1c
.BI "QSize \fBsize\fR () const"
.br
.ti -1c
.BI "void \fBsetAreaChanged\fR ( const QRect & r )"
.br
.in -1c
.SH DESCRIPTION
The QDirectPainter class provides direct access to the video hardware.
.PP
Only available in Qt/Embedded.
.PP
When the hardware is known and well defined, as is often the case with software for embedded devices, it may be useful to manipulate the underlying video hardware directly. In order to do this in a way that is co-operative with other applications, you must lock the video hardware for exclusive use for a small time while you write to it, and you must know the clipping region which is allocated to a widget.
.PP
QDirectPainter provides this functionality.
.PP
In the simplest case, you make a QDirectPainter on a widget and then, observing the clip region, perform some platform-specific operation. For example:
.PP
.nf
.br
        void MyWidget::updatePlatformGraphics()
.br
        {
.br
            QDirectPainter dp( this );
.br
            for ( int i = 0; i < dp.numRects; i++ ) {
.br
                const QRect& clip = dp.rect(i);
.br
                ... // platform specific operation
.br
            }
.br
        }
.br
.fi
.PP
The platform-specific code has access to the display, but should only modify graphics in the rectangles specified by numRects() and rect(). Note that these rectangles are relative to the entire display.
.PP
The offset() function returns the position of the widget relative to the entire display, allowing you to offset platform-specific operations appropriately. The xOffset() and yOffset() functions merely return the component values of offset().
.PP
For simple frame-buffer hardware, the frameBuffer(), lineStep(), and depth() functions provide basic access, though some hardware configurations are insufficiently specified by such simple parameters.
.PP
Note that while a QDirectPainter exists, the entire Qt/Embedded window system is locked from use by other applications. Always construct the QDirectPainter as an auto (stack) variable, and be very careful to write robust and stable code within its scope.
.PP
See also Graphics Classes.
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QDirectPainter::QDirectPainter ( const QWidget * w )"
Construct a direct painter on \fIw\fR. The display is locked and the mouse cursor is hidden if it is above \fIw\fR.
.SH "QDirectPainter::~QDirectPainter ()"
Destroys the direct painter. The mouse cursor is revealed if necessary and the display is unlocked.
.SH "int QDirectPainter::depth () const"
Returns the bit-depth of the display.
.SH "uchar * QDirectPainter::frameBuffer ()"
Returns a pointer to the framebuffer memory if available.
.SH "int QDirectPainter::height () const"
Returns the height of the widget drawn upon.
.SH "int QDirectPainter::lineStep ()"
Returns the spacing in bytes from one framebuffer line to the next.
.SH "int QDirectPainter::numRects () const"
Returns the number of rectangles in the drawable region.
.PP
See also rect() and region().
.SH "QPoint QDirectPainter::offset () const"
Returns the position of the widget relative to the entire display.
.SH "const QRect & QDirectPainter::rect ( int i ) const"
Returns a reference to rectangle \fIi\fR of the drawable region. Valid values for \fIi\fR are 0..numRects()-1.
.PP
See also region().
.SH "QRegion QDirectPainter::region () const"
Returns the region of the framebuffer which represents the exposed area of the widget being painted on. Note that this may be a sub-area of the clip region, because of child widgets and overlapping cousin widgets.
.PP
See also numRects() and rect().
.SH "void QDirectPainter::setAreaChanged ( const QRect & r )"
Sets the area changed by the transaction to \fIr\fR. By default, the entire widget is assumed to have changed. The area changed is only used by some graphics drivers, so often calling this function for a smaller area will make no difference to performance.
.SH "QSize QDirectPainter::size () const"
Returns the size of the widget drawn upon.
.PP
See also width() and height().
.SH "int QDirectPainter::transformOrientation ()"
Returns a number that signifies the orientation of the framebuffer. <center>.nf
.TS
l - l. 0 no rotation 1 90 degrees rotation 2 180 degrees rotation 3
.TE
.fi
</center>
.SH "int QDirectPainter::width () const"
Returns the width of the widget drawn upon.
.SH "int QDirectPainter::xOffset () const"
Returns the X-position of the widget relative to the entire display.
.SH "int QDirectPainter::yOffset () const"
Returns the Y-position of the widget relative to the entire
display.

.SH "SEE ALSO"
.BR http://doc.trolltech.com/qdirectpainter.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2007 Trolltech ASA, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports help us to help you. Thank you.
.P
The definitive Qt documentation is provided in HTML format; it is
located at $QTDIR/doc/html and can be read using Qt Assistant or with
a web browser. This man page is provided as a convenience for those
users who prefer man pages, although this format is not officially
supported by Trolltech. 
.P
If you find errors in this manual page, please report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qdirectpainter.3qt) and the Qt
version (3.3.8).
