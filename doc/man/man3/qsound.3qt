'\" t
.TH QSound 3qt "2 February 2007" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2007 Trolltech ASA.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QSound \- Access to the platform audio facilities
.SH SYNOPSIS
\fC#include <qsound.h>\fR
.PP
Inherits QObject.
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "\fBQSound\fR ( const QString & filename, QObject * parent = 0, const char * name = 0 )"
.br
.ti -1c
.BI "\fB~QSound\fR ()"
.br
.ti -1c
.BI "int \fBloops\fR () const"
.br
.ti -1c
.BI "int \fBloopsRemaining\fR () const"
.br
.ti -1c
.BI "void \fBsetLoops\fR ( int l )"
.br
.ti -1c
.BI "QString \fBfileName\fR () const"
.br
.ti -1c
.BI "bool \fBisFinished\fR () const"
.br
.in -1c
.SS "Public Slots"
.in +1c
.ti -1c
.BI "void \fBplay\fR ()"
.br
.ti -1c
.BI "void \fBstop\fR ()"
.br
.in -1c
.SS "Static Public Members"
.in +1c
.ti -1c
.BI "bool \fBisAvailable\fR ()"
.br
.ti -1c
.BI "void \fBplay\fR ( const QString & filename )"
.br
.ti -1c
.BI "bool \fBavailable\fR ()"
.br
.in -1c
.SH DESCRIPTION
The QSound class provides access to the platform audio facilities.
.PP
Qt provides the most commonly required audio operation in GUI applications: asynchronously playing a sound file. This is most easily accomplished with a single call:
.PP
.nf
.br
        QSound::play("mysounds/bells.wav");
.br
.fi
.PP
A second API is provided in which a QSound object is created from a sound file and is played later:
.PP
.nf
.br
        QSound bells("mysounds/bells.wav");
.br
.br
        bells.play();
.br
.fi
.PP
Sounds played using the second model may use more memory but play more immediately than sounds played using the first model, depending on the underlying platform audio facilities.
.PP
On Microsoft Windows the underlying multimedia system is used; only WAVE format sound files are supported.
.PP
On X11 the Network Audio System is used if available, otherwise all operations work silently. NAS supports WAVE and AU files.
.PP
On Macintosh, ironically, we use QT (QuickTime) for sound, this means all QuickTime formats are supported by Qt/Mac.
.PP
On Qt/Embedded, a built-in mixing sound server is used, which accesses \fC/dev/dsp\fR directly. Only the WAVE format is supported.
.PP
The availability of sound can be tested with QSound::isAvailable().
.PP
See also Multimedia Classes.
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QSound::QSound ( const QString & filename, QObject * parent = 0, const char * name = 0 )"
Constructs a QSound that can quickly play the sound in a file named \fIfilename\fR.
.PP
This may use more memory than the static \fCplay\fR function.
.PP
The \fIparent\fR and \fIname\fR arguments (default 0) are passed on to the QObject constructor.
.SH "QSound::~QSound ()"
Destroys the sound object. If the sound is not finished playing stop() is called on it.
.PP
See also stop() and isFinished().
.SH "bool QSound::available ()\fC [static]\fR"
Returns TRUE if sound support is available; otherwise returns FALSE.
.SH "QString QSound::fileName () const"
Returns the filename associated with the sound.
.SH "bool QSound::isAvailable ()\fC [static]\fR"
Returns TRUE if sound facilities exist on the platform; otherwise returns FALSE. An application may choose either to notify the user if sound is crucial to the application or to operate silently without bothering the user.
.PP
If no sound is available, all QSound operations work silently and quickly.
.SH "bool QSound::isFinished () const"
Returns TRUE if the sound has finished playing; otherwise returns FALSE.
.PP
\fBWarning:\fR On Windows this function always returns TRUE for unlooped sounds.
.SH "int QSound::loops () const"
Returns the number of times the sound will play.
.SH "int QSound::loopsRemaining () const"
Returns the number of times the sound will loop. This value decreases each time the sound loops.
.SH "void QSound::play ( const QString & filename )\fC [static]\fR"
Plays the sound in a file called \fIfilename\fR.
.PP
Example: sound/sound.cpp.
.SH "void QSound::play ()\fC [slot]\fR"
This is an overloaded member function, provided for convenience. It behaves essentially like the above function.
.PP
Starts the sound playing. The function returns immediately. Depending on the platform audio facilities, other sounds may stop or may be mixed with the new sound.
.PP
The sound can be played again at any time, possibly mixing or replacing previous plays of the sound.
.SH "void QSound::setLoops ( int l )"
Sets the sound to repeat \fIl\fR times when it is played. Passing the value -1 will cause the sound to loop indefinitely.
.PP
See also loops().
.SH "void QSound::stop ()\fC [slot]\fR"
Stops the sound playing.
.PP
On Windows the current loop will finish if a sound is played in a loop.
.PP
See also play().

.SH "SEE ALSO"
.BR http://doc.trolltech.com/qsound.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2007 Trolltech ASA, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports help us to help you. Thank you.
.P
The definitive Qt documentation is provided in HTML format; it is
located at $QTDIR/doc/html and can be read using Qt Assistant or with
a web browser. This man page is provided as a convenience for those
users who prefer man pages, although this format is not officially
supported by Trolltech. 
.P
If you find errors in this manual page, please report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qsound.3qt) and the Qt
version (3.3.8).
