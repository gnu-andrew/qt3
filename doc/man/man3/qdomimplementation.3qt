'\" t
.TH QDomImplementation 3qt "2 February 2007" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2007 Trolltech ASA.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QDomImplementation \- Information about the features of the DOM implementation
.SH SYNOPSIS
All the functions in this class are reentrant when Qt is built with thread support.</p>
.PP
\fC#include <qdom.h>\fR
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "\fBQDomImplementation\fR ()"
.br
.ti -1c
.BI "\fBQDomImplementation\fR ( const QDomImplementation & x )"
.br
.ti -1c
.BI "virtual \fB~QDomImplementation\fR ()"
.br
.ti -1c
.BI "QDomImplementation & \fBoperator=\fR ( const QDomImplementation & x )"
.br
.ti -1c
.BI "bool \fBoperator==\fR ( const QDomImplementation & x ) const"
.br
.ti -1c
.BI "bool \fBoperator!=\fR ( const QDomImplementation & x ) const"
.br
.ti -1c
.BI "virtual bool \fBhasFeature\fR ( const QString & feature, const QString & version )"
.br
.ti -1c
.BI "virtual QDomDocumentType \fBcreateDocumentType\fR ( const QString & qName, const QString & publicId, const QString & systemId )"
.br
.ti -1c
.BI "virtual QDomDocument \fBcreateDocument\fR ( const QString & nsURI, const QString & qName, const QDomDocumentType & doctype )"
.br
.ti -1c
.BI "bool \fBisNull\fR ()"
.br
.in -1c
.SH DESCRIPTION
The QDomImplementation class provides information about the features of the DOM implementation.
.PP
This class describes the features that are supported by the DOM implementation. Currently the XML subset of DOM Level 1 and DOM Level 2 Core are supported.
.PP
Normally you will use the function QDomDocument::implementation() to get the implementation object.
.PP
You can create a new document type with createDocumentType() and a new document with createDocument().
.PP
For further information about the Document Object Model see http://www.w3.org/TR/REC-DOM-Level-1/ and http://www.w3.org/TR/DOM-Level-2-Core/. For a more general introduction of the DOM implementation see the QDomDocument documentation.
.PP
See also hasFeature() and XML.
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QDomImplementation::QDomImplementation ()"
Constructs a QDomImplementation object.
.SH "QDomImplementation::QDomImplementation ( const QDomImplementation & x )"
Constructs a copy of \fIx\fR.
.SH "QDomImplementation::~QDomImplementation ()\fC [virtual]\fR"
Destroys the object and frees its resources.
.SH "QDomDocument QDomImplementation::createDocument ( const QString & nsURI, const QString & qName, const QDomDocumentType & doctype )\fC [virtual]\fR"
Creates a DOM document with the document type \fIdoctype\fR. This function also adds a root element node with the qualified name \fIqName\fR and the namespace URI \fInsURI\fR.
.SH "QDomDocumentType QDomImplementation::createDocumentType ( const QString & qName, const QString & publicId, const QString & systemId )\fC [virtual]\fR"
Creates a document type node for the name \fIqName\fR.
.PP
\fIpublicId\fR specifies the public identifier of the external subset. If you specify QString::null as the \fIpublicId\fR, this means that the document type has no public identifier.
.PP
\fIsystemId\fR specifies the system identifier of the external subset. If you specify QString::null as the \fIsystemId\fR, this means that the document type has no system identifier.
.PP
Since you cannot have a public identifier without a system identifier, the public identifier is set to QString::null if there is no system identifier.
.PP
DOM level 2 does not support any other document type declaration features.
.PP
The only way you can use a document type that was created this way, is in combination with the createDocument() function to create a QDomDocument with this document type.
.PP
See also createDocument().
.SH "bool QDomImplementation::hasFeature ( const QString & feature, const QString & version )\fC [virtual]\fR"
The function returns TRUE if QDom implements the requested \fIversion\fR of a \fIfeature\fR; otherwise returns FALSE.
.PP
The currently supported features and their versions: <center>.nf
.TS
l - l. Feature Version XML
.TE
.fi
</center>
.SH "bool QDomImplementation::isNull ()"
Returns FALSE if the object was created by QDomDocument::implementation(); otherwise returns TRUE.
.SH "bool QDomImplementation::operator!= ( const QDomImplementation & x ) const"
Returns TRUE if \fIx\fR and this DOM implementation object were created from different QDomDocuments; otherwise returns FALSE.
.SH "QDomImplementation & QDomImplementation::operator= ( const QDomImplementation & x )"
Assigns \fIx\fR to this DOM implementation.
.SH "bool QDomImplementation::operator== ( const QDomImplementation & x ) const"
Returns TRUE if \fIx\fR and this DOM implementation object were
created from the same QDomDocument; otherwise returns FALSE.

.SH "SEE ALSO"
.BR http://doc.trolltech.com/qdomimplementation.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2007 Trolltech ASA, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports help us to help you. Thank you.
.P
The definitive Qt documentation is provided in HTML format; it is
located at $QTDIR/doc/html and can be read using Qt Assistant or with
a web browser. This man page is provided as a convenience for those
users who prefer man pages, although this format is not officially
supported by Trolltech. 
.P
If you find errors in this manual page, please report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qdomimplementation.3qt) and the Qt
version (3.3.8).
