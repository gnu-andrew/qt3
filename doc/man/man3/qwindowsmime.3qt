'\" t
.TH QWindowsMime 3qt "2 February 2007" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2007 Trolltech ASA.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QWindowsMime \- Maps open-standard MIME to Window Clipboard formats
.SH SYNOPSIS
\fC#include <qmime.h>\fR
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "\fBQWindowsMime\fR ()"
.br
.ti -1c
.BI "virtual \fB~QWindowsMime\fR ()"
.br
.ti -1c
.BI "virtual const char * \fBconvertorName\fR () = 0"
.br
.ti -1c
.BI "virtual int \fBcountCf\fR () = 0"
.br
.ti -1c
.BI "virtual int \fBcf\fR ( int index ) = 0"
.br
.ti -1c
.BI "virtual bool \fBcanConvert\fR ( const char * mime, int cf ) = 0"
.br
.ti -1c
.BI "virtual const char * \fBmimeFor\fR ( int cf ) = 0"
.br
.ti -1c
.BI "virtual int \fBcfFor\fR ( const char * mime ) = 0"
.br
.ti -1c
.BI "virtual QByteArray \fBconvertToMime\fR ( QByteArray data, const char * mime, int cf ) = 0"
.br
.ti -1c
.BI "virtual QByteArray \fBconvertFromMime\fR ( QByteArray data, const char * mime, int cf ) = 0"
.br
.in -1c
.SS "Static Public Members"
.in +1c
.ti -1c
.BI "void \fBinitialize\fR ()"
.br
.ti -1c
.BI "QPtrList<QWindowsMime> \fBall\fR ()"
.br
.ti -1c
.BI "QWindowsMime * \fBconvertor\fR ( const char * mime, int cf )"
.br
.ti -1c
.BI "const char * \fBcfToMime\fR ( int cf )"
.br
.in -1c
.SH DESCRIPTION
The QWindowsMime class maps open-standard MIME to Window Clipboard formats.
.PP
Qt's drag-and-drop and clipboard facilities use the MIME standard. On X11, this maps trivially to the Xdnd protocol, but on Windows although some applications use MIME types to describe clipboard formats, others use arbitrary non-standardized naming conventions, or unnamed built-in formats of Windows.
.PP
By instantiating subclasses of QWindowsMime that provide conversions between Windows Clipboard and MIME formats, you can convert proprietary clipboard formats to MIME formats.
.PP
Qt has predefined support for the following Windows Clipboard formats:
.TP
CF_UNICODETEXT - converted to "text/plain;charset=ISO-10646-UCS-2" and supported by QTextDrag.
.TP
CF_TEXT - converted to "text/plain;charset=system" or "text/plain" and supported by QTextDrag.
.TP
CF_DIB - converted to "image/*", where * is a Qt image format, and supported by QImageDrag.
.TP
CF_HDROP - converted to "text/uri-list", and supported by QUriDrag.
.PP
An example use of this class would be to map the Windows Metafile clipboard format (CF_METAFILEPICT) to and from the MIME type "image/x-wmf". This conversion might simply be adding or removing a header, or even just passing on the data. See the Drag-and-Drop documentation for more information on choosing and definition MIME types.
.PP
You can check if a MIME type is convertible using canConvert() and can perform conversions with convertToMime() and convertFromMime().
.PP
See also Drag And Drop Classes, Input/Output and Networking, and Miscellaneous Classes.
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QWindowsMime::QWindowsMime ()"
Constructs a new conversion object, adding it to the globally accessed list of available convertors.
.SH "QWindowsMime::~QWindowsMime ()\fC [virtual]\fR"
Destroys a conversion object, removing it from the global list of available convertors.
.SH "QPtrList<QWindowsMime> QWindowsMime::all ()\fC [static]\fR"
Returns a list of all currently defined QWindowsMime objects.
.SH "bool QWindowsMime::canConvert ( const char * mime, int cf )\fC [pure virtual]\fR"
Returns TRUE if the convertor can convert (both ways) between \fImime\fR and \fIcf\fR; otherwise returns FALSE.
.PP
All subclasses must reimplement this pure virtual function.
.SH "int QWindowsMime::cf ( int index )\fC [pure virtual]\fR"
Returns the Windows Clipboard format supported by this convertor that is ordinarily at position \fIindex\fR. This means that cf(0) returns the first Windows Clipboard format supported, and cf(countCf()-1) returns the last. If \fIindex\fR is out of range the return value is undefined.
.PP
All subclasses must reimplement this pure virtual function.
.SH "int QWindowsMime::cfFor ( const char * mime )\fC [pure virtual]\fR"
Returns the Windows Clipboard type used for MIME type \fImime\fR, or 0 if this convertor does not support \fImime\fR.
.PP
All subclasses must reimplement this pure virtual function.
.SH "const char * QWindowsMime::cfToMime ( int cf )\fC [static]\fR"
Returns a MIME type for \fIcf\fR, or 0 if none exists.
.SH "QByteArray QWindowsMime::convertFromMime ( QByteArray data, const char * mime, int cf )\fC [pure virtual]\fR"
Returns \fIdata\fR converted from MIME type \fImime\fR to Windows Clipboard format \fIcf\fR.
.PP
Note that Windows Clipboard formats must all be self-terminating. The return value may contain trailing data.
.PP
All subclasses must reimplement this pure virtual function.
.SH "QByteArray QWindowsMime::convertToMime ( QByteArray data, const char * mime, int cf )\fC [pure virtual]\fR"
Returns \fIdata\fR converted from Windows Clipboard format \fIcf\fR to MIME type \fImime\fR.
.PP
Note that Windows Clipboard formats must all be self-terminating. The input \fIdata\fR may contain trailing data.
.PP
All subclasses must reimplement this pure virtual function.
.SH "QWindowsMime * QWindowsMime::convertor ( const char * mime, int cf )\fC [static]\fR"
Returns the most-recently created QWindowsMime that can convert between the \fImime\fR and \fIcf\fR formats. Returns 0 if no such convertor exists.
.SH "const char * QWindowsMime::convertorName ()\fC [pure virtual]\fR"
Returns a name for the convertor.
.PP
All subclasses must reimplement this pure virtual function.
.SH "int QWindowsMime::countCf ()\fC [pure virtual]\fR"
Returns the number of Windows Clipboard formats supported by this convertor.
.PP
All subclasses must reimplement this pure virtual function.
.SH "void QWindowsMime::initialize ()\fC [static]\fR"
This is an internal function.
.SH "const char * QWindowsMime::mimeFor ( int cf )\fC [pure virtual]\fR"
Returns the MIME type used for Windows Clipboard format \fIcf\fR, or 0 if this convertor does not support \fIcf\fR.
.PP
All subclasses must reimplement this pure virtual function.

.SH "SEE ALSO"
.BR http://doc.trolltech.com/qwindowsmime.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2007 Trolltech ASA, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports help us to help you. Thank you.
.P
The definitive Qt documentation is provided in HTML format; it is
located at $QTDIR/doc/html and can be read using Qt Assistant or with
a web browser. This man page is provided as a convenience for those
users who prefer man pages, although this format is not officially
supported by Trolltech. 
.P
If you find errors in this manual page, please report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qwindowsmime.3qt) and the Qt
version (3.3.8).
