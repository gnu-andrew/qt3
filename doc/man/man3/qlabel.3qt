'\" t
.TH QLabel 3qt "2 February 2007" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2007 Trolltech ASA.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QLabel \- Text or image display
.SH SYNOPSIS
\fC#include <qlabel.h>\fR
.PP
Inherits QFrame.
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "\fBQLabel\fR ( QWidget * parent, const char * name = 0, WFlags f = 0 )"
.br
.ti -1c
.BI "\fBQLabel\fR ( const QString & text, QWidget * parent, const char * name = 0, WFlags f = 0 )"
.br
.ti -1c
.BI "\fBQLabel\fR ( QWidget * buddy, const QString & text, QWidget * parent, const char * name = 0, WFlags f = 0 )"
.br
.ti -1c
.BI "\fB~QLabel\fR ()"
.br
.ti -1c
.BI "QString \fBtext\fR () const"
.br
.ti -1c
.BI "QPixmap * \fBpixmap\fR () const"
.br
.ti -1c
.BI "QPicture * \fBpicture\fR () const"
.br
.ti -1c
.BI "QMovie * \fBmovie\fR () const"
.br
.ti -1c
.BI "TextFormat \fBtextFormat\fR () const"
.br
.ti -1c
.BI "void \fBsetTextFormat\fR ( TextFormat )"
.br
.ti -1c
.BI "int \fBalignment\fR () const"
.br
.ti -1c
.BI "virtual void \fBsetAlignment\fR ( int )"
.br
.ti -1c
.BI "int \fBindent\fR () const"
.br
.ti -1c
.BI "void \fBsetIndent\fR ( int )"
.br
.ti -1c
.BI "bool autoResize () const  \fI(obsolete)\fR"
.br
.ti -1c
.BI "virtual void setAutoResize ( bool enable )  \fI(obsolete)\fR"
.br
.ti -1c
.BI "bool \fBhasScaledContents\fR () const"
.br
.ti -1c
.BI "void \fBsetScaledContents\fR ( bool )"
.br
.ti -1c
.BI "virtual void \fBsetBuddy\fR ( QWidget * buddy )"
.br
.ti -1c
.BI "QWidget * \fBbuddy\fR () const"
.br
.ti -1c
.BI "virtual void \fBsetFont\fR ( const QFont & f )"
.br
.in -1c
.SS "Public Slots"
.in +1c
.ti -1c
.BI "virtual void \fBsetText\fR ( const QString & )"
.br
.ti -1c
.BI "virtual void \fBsetPixmap\fR ( const QPixmap & )"
.br
.ti -1c
.BI "virtual void \fBsetPicture\fR ( const QPicture & picture )"
.br
.ti -1c
.BI "virtual void \fBsetMovie\fR ( const QMovie & movie )"
.br
.ti -1c
.BI "virtual void \fBsetNum\fR ( int num )"
.br
.ti -1c
.BI "virtual void \fBsetNum\fR ( double num )"
.br
.ti -1c
.BI "void \fBclear\fR ()"
.br
.in -1c
.SS "Properties"
.in +1c
.ti -1c
.BI "Alignment \fBalignment\fR - the alignment of the label's contents"
.br
.ti -1c
.BI "BackgroundMode \fBbackgroundMode\fR - the label's background mode  \fI(read " "only" ")\fR"
.br
.ti -1c
.BI "int \fBindent\fR - the label's text indent in pixels"
.br
.ti -1c
.BI "QPixmap \fBpixmap\fR - the label's pixmap"
.br
.ti -1c
.BI "bool \fBscaledContents\fR - whether the label will scale its contents to fill all available space"
.br
.ti -1c
.BI "QString \fBtext\fR - the label's text"
.br
.ti -1c
.BI "TextFormat \fBtextFormat\fR - the label's text format"
.br
.in -1c
.SS "Protected Members"
.in +1c
.ti -1c
.BI "virtual void \fBdrawContents\fR ( QPainter * p )"
.br
.in -1c
.SH DESCRIPTION
The QLabel widget provides a text or image display.
.PP
QLabel is used for displaying text or an image. No user interaction functionality is provided. The visual appearance of the label can be configured in various ways, and it can be used for specifying a focus accelerator key for another widget.
.PP
A QLabel can contain any of the following content types: <center>.nf
.TS
l - l. Content Setting Plain text Pass a QString to setText(). Rich text Pass a QString that contains rich text to setText(). A pixmap Pass a QPixmap to setPixmap(). A movie Pass a QMovie to setMovie(). A number Pass an \fIint\fR or a \fIdouble\fR to setNum(), which converts the number to plain text. Nothing
.TE
.fi
</center>
.PP
When the content is changed using any of these functions, any previous content is cleared.
.PP
The look of a QLabel can be tuned in several ways. All the settings of QFrame are available for specifying a widget frame. The positioning of the content within the QLabel widget area can be tuned with setAlignment() and setIndent(). For example, this code sets up a sunken panel with a two-line text in the bottom right corner (both lines being flush with the right side of the label):
.PP
.nf
.br
    QLabel *label = new QLabel( this );
.br
    label->setFrameStyle( QFrame::Panel | QFrame::Sunken );
.br
    label->setText( "first line\\nsecond line" );
.br
    label->setAlignment( AlignBottom | AlignRight );
.br
.fi
.PP
A QLabel is often used as a label for an interactive widget. For this use QLabel provides a useful mechanism for adding an accelerator key (see QAccel) that will set the keyboard focus to the other widget (called the QLabel's "buddy"). For example:
.PP
.nf
.br
    QLineEdit* phoneEdit = new QLineEdit( this, "phoneEdit" );
.br
    QLabel* phoneLabel = new QLabel( phoneEdit, "&Phone:", this, "phoneLabel" );
.br
.fi
.PP
In this example, keyboard focus is transferred to the label's buddy (the QLineEdit) when the user presses Alt+P. You can also use the setBuddy() function to accomplish the same thing.
.PP
.ce 1
.B "[Image Omitted]"
.PP

.ce 1
.B "[Image Omitted]"
.PP
See also QLineEdit, QTextEdit, QPixmap, QMovie, GUI Design Handbook: Label, Basic Widgets, and Text Related Classes.
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QLabel::QLabel ( QWidget * parent, const char * name = 0, WFlags f = 0 )"
Constructs an empty label.
.PP
The \fIparent\fR, \fIname\fR and widget flag \fIf\fR, arguments are passed to the QFrame constructor.
.PP
See also alignment, setFrameStyle(), and indent.
.SH "QLabel::QLabel ( const QString & text, QWidget * parent, const char * name = 0, WFlags f = 0 )"
Constructs a label that displays the text, \fItext\fR.
.PP
The \fIparent\fR, \fIname\fR and widget flag \fIf\fR, arguments are passed to the QFrame constructor.
.PP
See also text, alignment, setFrameStyle(), and indent.
.SH "QLabel::QLabel ( QWidget * buddy, const QString & text, QWidget * parent, const char * name = 0, WFlags f = 0 )"
Constructs a label that displays the text \fItext\fR. The label has a buddy widget, \fIbuddy\fR.
.PP
If the \fItext\fR contains an underlined letter (a letter preceded by an ampersand, &), and the text is in plain text format, when the user presses Alt+ the underlined letter, focus is passed to the buddy widget.
.PP
The \fIparent\fR, \fIname\fR and widget flag, \fIf\fR, arguments are passed to the QFrame constructor.
.PP
See also text, setBuddy(), alignment, setFrameStyle(), and indent.
.SH "QLabel::~QLabel ()"
Destroys the label.
.SH "int QLabel::alignment () const"
Returns the alignment of the label's contents. See the "alignment" property for details.
.SH "bool QLabel::autoResize () const"
\fBThis function is obsolete.\fR It is provided to keep old source working. We strongly advise against using it in new code.
.PP
Returns TRUE if auto-resizing is enabled, or FALSE if auto-resizing is disabled.
.PP
Auto-resizing is disabled by default.
.PP
See also setAutoResize().
.SH "QWidget * QLabel::buddy () const"
Returns this label's buddy, or 0 if no buddy is currently set.
.PP
See also setBuddy().
.SH "void QLabel::clear ()\fC [slot]\fR"
Clears any label contents. Equivalent to setText( "" ).
.SH "void QLabel::drawContents ( QPainter * p )\fC [virtual protected]\fR"
Draws the label contents using the painter \fIp\fR.
.PP
Reimplemented from QFrame.
.SH "bool QLabel::hasScaledContents () const"
Returns TRUE if the label will scale its contents to fill all available space; otherwise returns FALSE. See the "scaledContents" property for details.
.SH "int QLabel::indent () const"
Returns the label's text indent in pixels. See the "indent" property for details.
.SH "QMovie * QLabel::movie () const"
Returns a pointer to the label's movie, or 0 if no movie has been set.
.PP
See also setMovie().
.SH "QPicture * QLabel::picture () const"
Returns the label's picture or 0 if the label doesn't have a picture.
.SH "QPixmap * QLabel::pixmap () const"
Returns the label's pixmap. See the "pixmap" property for details.
.SH "void QLabel::setAlignment ( int )\fC [virtual]\fR"
Sets the alignment of the label's contents. See the "alignment" property for details.
.SH "void QLabel::setAutoResize ( bool enable )\fC [virtual]\fR"
\fBThis function is obsolete.\fR It is provided to keep old source working. We strongly advise against using it in new code.
.PP
Enables auto-resizing if \fIenable\fR is TRUE, or disables it if \fIenable\fR is FALSE.
.PP
When auto-resizing is enabled the label will resize itself to fit the contents whenever the contents change. The top-left corner is not moved. This is useful for QLabel widgets that are not managed by a QLayout (e.g., top-level widgets).
.PP
Auto-resizing is disabled by default.
.PP
See also autoResize(), adjustSize(), and sizeHint.
.SH "void QLabel::setBuddy ( QWidget * buddy )\fC [virtual]\fR"
Sets this label's buddy to \fIbuddy\fR.
.PP
When the user presses the accelerator key indicated by this label, the keyboard focus is transferred to the label's buddy widget.
.PP
The buddy mechanism is only available for QLabels that contain plain text in which one letter is prefixed with an ampersand, &. This letter is set as the accelerator key. The letter is displayed underlined, and the '&' is not displayed (i.e. the ShowPrefix alignment flag is turned on; see setAlignment()).
.PP
In a dialog, you might create two data entry widgets and a label for each, and set up the geometry layout so each label is just to the left of its data entry widget (its "buddy"), for example:
.PP
.nf
.br
    QLineEdit *nameEd  = new QLineEdit( this );
.br
    QLabel    *nameLb  = new QLabel( "&Name:", this );
.br
    nameLb->setBuddy( nameEd );
.br
    QLineEdit *phoneEd = new QLineEdit( this );
.br
    QLabel    *phoneLb = new QLabel( "&Phone:", this );
.br
    phoneLb->setBuddy( phoneEd );
.br
    // ( layout setup not shown )
.br
.fi
.PP
With the code above, the focus jumps to the Name field when the user presses Alt+N, and to the Phone field when the user presses Alt+P.
.PP
To unset a previously set buddy, call this function with \fIbuddy\fR set to 0.
.PP
See also buddy(), text, QAccel, and alignment.
.PP
Examples:
.)l addressbook/centralwidget.cpp, chart/optionsform.cpp, and regexptester/regexptester.cpp.
.SH "void QLabel::setFont ( const QFont & f )\fC [virtual]\fR"
Sets the font used on the QLabel to font \fIf\fR.
.PP
Example: menu/menu.cpp.
.PP
Reimplemented from QWidget.
.SH "void QLabel::setIndent ( int )"
Sets the label's text indent in pixels. See the "indent" property for details.
.SH "void QLabel::setMovie ( const QMovie & movie )\fC [virtual slot]\fR"
Sets the label contents to \fImovie\fR. Any previous content is cleared.
.PP
The buddy accelerator, if any, is disabled.
.PP
The label resizes itself if auto-resizing is enabled.
.PP
See also movie() and setBuddy().
.SH "void QLabel::setNum ( int num )\fC [virtual slot]\fR"
Sets the label contents to plain text containing the textual representation of integer \fInum\fR. Any previous content is cleared. Does nothing if the integer's string representation is the same as the current contents of the label.
.PP
The buddy accelerator, if any, is disabled.
.PP
The label resizes itself if auto-resizing is enabled.
.PP
See also text, QString::setNum(), and setBuddy().
.SH "void QLabel::setNum ( double num )\fC [virtual slot]\fR"
This is an overloaded member function, provided for convenience. It behaves essentially like the above function.
.PP
Sets the label contents to plain text containing the textual representation of double \fInum\fR. Any previous content is cleared. Does nothing if the double's string representation is the same as the current contents of the label.
.PP
The buddy accelerator, if any, is disabled.
.PP
The label resizes itself if auto-resizing is enabled.
.PP
See also text, QString::setNum(), and setBuddy().
.SH "void QLabel::setPicture ( const QPicture & picture )\fC [virtual slot]\fR"
Sets the label contents to \fIpicture\fR. Any previous content is cleared.
.PP
The buddy accelerator, if any, is disabled.
.PP
See also picture() and setBuddy().
.SH "void QLabel::setPixmap ( const QPixmap & )\fC [virtual slot]\fR"
Sets the label's pixmap. See the "pixmap" property for details.
.SH "void QLabel::setScaledContents ( bool )"
Sets whether the label will scale its contents to fill all available space. See the "scaledContents" property for details.
.SH "void QLabel::setText ( const QString & )\fC [virtual slot]\fR"
Sets the label's text. See the "text" property for details.
.SH "void QLabel::setTextFormat ( TextFormat )"
Sets the label's text format. See the "textFormat" property for details.
.SH "QString QLabel::text () const"
Returns the label's text. See the "text" property for details.
.SH "TextFormat QLabel::textFormat () const"
Returns the label's text format. See the "textFormat" property for details.
.SS "Property Documentation"
.SH "Alignment alignment"
This property holds the alignment of the label's contents.
.PP
The alignment is a bitwise OR of Qt::AlignmentFlags and Qt::TextFlags values. The ExpandTabs, SingleLine and ShowPrefix flags apply only if the label contains plain text; otherwise they are ignored. The DontClip flag is always ignored. WordBreak applies to both rich text and plain text labels. The BreakAnywhere flag is not supported in QLabel.
.PP
If the label has a buddy, the ShowPrefix flag is forced to TRUE.
.PP
The default alignment is \fCAlignAuto | AlignVCenter | ExpandTabs\fR if the label doesn't have a buddy and \fCAlignAuto | AlignVCenter | ExpandTabs | ShowPrefix\fR if the label has a buddy. If the label contains rich text, additionally WordBreak is turned on.
.PP
See also Qt::AlignmentFlags, setBuddy(), and text.
.PP
Set this property's value with setAlignment() and get this property's value with alignment().
.SH "BackgroundMode backgroundMode"
This property holds the label's background mode.
.PP
Get this property with backgroundMode().
.PP
See also QWidget::backgroundMode.
.SH "int indent"
This property holds the label's text indent in pixels.
.PP
If a label displays text, the indent applies to the left edge if alignment() is AlignLeft, to the right edge if alignment() is AlignRight, to the top edge if alignment() is AlignTop, and to to the bottom edge if alignment() is AlignBottom.
.PP
If indent is negative, or if no indent has been set, the label computes the effective indent as follows: If frameWidth() is 0, the effective indent becomes 0. If frameWidth() is greater than 0, the effective indent becomes half the width of the "x" character of the widget's current font().
.PP
See also alignment, frameWidth, and font.
.PP
Set this property's value with setIndent() and get this property's value with indent().
.SH "QPixmap pixmap"
This property holds the label's pixmap.
.PP
If no pixmap has been set this will return an invalid pixmap.
.PP
Setting the pixmap clears any previous content, and resizes the label if QLabel::autoResize() is TRUE. The buddy accelerator, if any, is disabled.
.PP
Set this property's value with setPixmap() and get this property's value with pixmap().
.SH "bool scaledContents"
This property holds whether the label will scale its contents to fill all available space.
.PP
When enabled and the label shows a pixmap, it will scale the pixmap to fill the available space.
.PP
This property's default is FALSE.
.PP
See also scaledContents.
.PP
Set this property's value with setScaledContents() and get this property's value with hasScaledContents().
.SH "QString text"
This property holds the label's text.
.PP
If no text has been set this will return an empty string. Setting the text clears any previous content, unless they are the same.
.PP
The text will be interpreted either as a plain text or as a rich text, depending on the text format setting; see setTextFormat(). The default setting is AutoText, i.e. QLabel will try to auto-detect the format of the text set.
.PP
If the text is interpreted as a plain text and a buddy has been set, the buddy accelerator key is updated from the new text.
.PP
The label resizes itself if auto-resizing is enabled.
.PP
Note that Qlabel is well-suited to display small rich text documents, i.e. those small documents that get their document specific settings (font, text color, link color) from the label's palette and font properties. For large documents, use QTextEdit in read-only mode instead. QTextEdit will flicker less on resize and can also provide a scrollbar when necessary.
.PP
See also textFormat, setBuddy(), and alignment.
.PP
Set this property's value with setText() and get this property's value with text().
.SH "TextFormat textFormat"
This property holds the label's text format.
.PP
See the Qt::TextFormat enum for an explanation of the possible options.
.PP
The default format is AutoText.
.PP
See also text.
.PP
Set this property's value with setTextFormat() and get this property's value with textFormat().

.SH "SEE ALSO"
.BR http://doc.trolltech.com/qlabel.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2007 Trolltech ASA, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports help us to help you. Thank you.
.P
The definitive Qt documentation is provided in HTML format; it is
located at $QTDIR/doc/html and can be read using Qt Assistant or with
a web browser. This man page is provided as a convenience for those
users who prefer man pages, although this format is not officially
supported by Trolltech. 
.P
If you find errors in this manual page, please report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qlabel.3qt) and the Qt
version (3.3.8).
