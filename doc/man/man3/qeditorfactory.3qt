'\" t
.TH QEditorFactory 3qt "2 February 2007" "Trolltech AS" \" -*- nroff -*-
.\" Copyright 1992-2007 Trolltech ASA.  All rights reserved.  See the
.\" license file included in the distribution for a complete license
.\" statement.
.\"
.ad l
.nh
.SH NAME
QEditorFactory \- Used to create editor widgets for QVariant data types
.SH SYNOPSIS
\fC#include <qeditorfactory.h>\fR
.PP
Inherits QObject.
.PP
Inherited by QSqlEditorFactory.
.PP
.SS "Public Members"
.in +1c
.ti -1c
.BI "\fBQEditorFactory\fR ( QObject * parent = 0, const char * name = 0 )"
.br
.ti -1c
.BI "\fB~QEditorFactory\fR ()"
.br
.ti -1c
.BI "virtual QWidget * \fBcreateEditor\fR ( QWidget * parent, const QVariant & v )"
.br
.in -1c
.SS "Static Public Members"
.in +1c
.ti -1c
.BI "QEditorFactory * \fBdefaultFactory\fR ()"
.br
.ti -1c
.BI "void \fBinstallDefaultFactory\fR ( QEditorFactory * factory )"
.br
.in -1c
.SH DESCRIPTION
The QEditorFactory class is used to create editor widgets for QVariant data types.
.PP
Each editor factory provides the createEditor() function which given a QVariant will create and return a QWidget that can edit that QVariant. For example if you have a QVariant::String type, a QLineEdit would be the default editor returned, whereas a QVariant::Int's default editor would be a QSpinBox.
.PP
If you want to create different editors for fields with the same data type, subclass QEditorFactory and reimplement the createEditor() function.
.PP
See also Database Classes.
.SH MEMBER FUNCTION DOCUMENTATION
.SH "QEditorFactory::QEditorFactory ( QObject * parent = 0, const char * name = 0 )"
Constructs an editor factory with parent \fIparent\fR, called \fIname\fR.
.SH "QEditorFactory::~QEditorFactory ()"
Destroys the object and frees any allocated resources.
.SH "QWidget * QEditorFactory::createEditor ( QWidget * parent, const QVariant & v )\fC [virtual]\fR"
Creates and returns the appropriate editor for the QVariant \fIv\fR. If the QVariant is invalid, 0 is returned. The \fIparent\fR is passed to the appropriate editor's constructor.
.PP
Reimplemented in QSqlEditorFactory.
.SH "QEditorFactory * QEditorFactory::defaultFactory ()\fC [static]\fR"
Returns an instance of a default editor factory.
.SH "void QEditorFactory::installDefaultFactory ( QEditorFactory * factory )\fC [static]\fR"
Replaces the default editor factory with \fIfactory\fR.
\fIQEditorFactory takes ownership of factory, and destroys it when it is no longer needed.\fR

.SH "SEE ALSO"
.BR http://doc.trolltech.com/qeditorfactory.html
.BR http://www.trolltech.com/faq/tech.html
.SH COPYRIGHT
Copyright 1992-2007 Trolltech ASA, http://www.trolltech.com.  See the
license file included in the distribution for a complete license
statement.
.SH AUTHOR
Generated automatically from the source code.
.SH BUGS
If you find a bug in Qt, please report it as described in
.BR http://doc.trolltech.com/bughowto.html .
Good bug reports help us to help you. Thank you.
.P
The definitive Qt documentation is provided in HTML format; it is
located at $QTDIR/doc/html and can be read using Qt Assistant or with
a web browser. This man page is provided as a convenience for those
users who prefer man pages, although this format is not officially
supported by Trolltech. 
.P
If you find errors in this manual page, please report them to
.BR qt-bugs@trolltech.com .
Please include the name of the manual page (qeditorfactory.3qt) and the Qt
version (3.3.8).
